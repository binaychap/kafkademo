[2019-02-05 12:08:17,346] INFO [Controller id=5] 5 successfully elected as the controller (kafka.controller.KafkaController)
[2019-02-05 12:08:17,347] INFO [Controller id=5] Starting become controller state transition (kafka.controller.KafkaController)
[2019-02-05 12:08:17,350] INFO [Controller id=5] Initialized controller epoch to 12 and zk version 11 (kafka.controller.KafkaController)
[2019-02-05 12:08:17,352] INFO [Controller id=5] Incremented epoch to 13 (kafka.controller.KafkaController)
[2019-02-05 12:08:17,355] DEBUG [Controller id=5] Registering IsrChangeNotificationListener (kafka.controller.KafkaController)
[2019-02-05 12:08:17,359] DEBUG [Controller id=5] Registering logDirEventNotificationListener (kafka.controller.KafkaController)
[2019-02-05 12:08:17,418] DEBUG [Channel manager on controller 5]: Controller 5 trying to connect to broker 5 (kafka.controller.ControllerChannelManager)
[2019-02-05 12:08:17,427] INFO [Controller-5-to-broker-5-send-thread]: Starting (kafka.controller.RequestSendThread)
[2019-02-05 12:08:17,429] INFO [Controller id=5] Partitions being reassigned: Map() (kafka.controller.KafkaController)
[2019-02-05 12:08:17,429] INFO [Controller id=5] Partitions already reassigned: Set() (kafka.controller.KafkaController)
[2019-02-05 12:08:17,429] INFO [Controller id=5] Resuming reassignment of partitions: Map() (kafka.controller.KafkaController)
[2019-02-05 12:08:17,430] INFO [Controller id=5] Currently active brokers in the cluster: Set(5) (kafka.controller.KafkaController)
[2019-02-05 12:08:17,432] INFO [Controller id=5] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2019-02-05 12:08:17,432] INFO [Controller id=5] Current list of topics in the cluster: Set(test.venkataclear, create.employee, create.assignment, __consumer_offsets, test.vankata, test.venkata, testtopic) (kafka.controller.KafkaController)
[2019-02-05 12:08:17,439] INFO [Controller id=5] List of topics to be deleted:  (kafka.controller.KafkaController)
[2019-02-05 12:08:17,439] INFO [Controller id=5] List of topics ineligible for deletion: create.employee,create.assignment,__consumer_offsets,test.vankata,test.venkata,testtopic (kafka.controller.KafkaController)
[2019-02-05 12:08:17,464] INFO [Controller-5-to-broker-5-send-thread]: Controller 5 connected to localhost:9095 (id: 5 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2019-02-05 12:08:17,491] INFO [ReplicaStateMachine controllerId=5] Invoking state change to OnlineReplica for replicas [Topic=test.venkataclear,Partition=0,Replica=5],[Topic=test.venkata,Partition=0,Replica=5],[Topic=test.venkata,Partition=1,Replica=5],[Topic=test.venkata,Partition=2,Replica=5] (kafka.controller.ReplicaStateMachine)
[2019-02-05 12:08:17,539] INFO [ReplicaStateMachine controllerId=5] Started replica state machine with initial state -> Map([Topic=__consumer_offsets,Partition=17,Replica=3] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=33,Replica=4] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=24,Replica=4] -> ReplicaDeletionIneligible, [Topic=create.employee,Partition=2,Replica=3] -> ReplicaDeletionIneligible, [Topic=create.employee,Partition=2,Replica=4] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=3,Replica=4] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=45,Replica=4] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=19,Replica=0] -> ReplicaDeletionIneligible, [Topic=test.venkata,Partition=2,Replica=5] -> OnlineReplica, [Topic=__consumer_offsets,Partition=49,Replica=0] -> ReplicaDeletionIneligible, [Topic=testtopic,Partition=0,Replica=4] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=26,Replica=3] -> ReplicaDeletionIneligible, [Topic=test.venkata,Partition=0,Replica=4] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=22,Replica=0] -> ReplicaDeletionIneligible, [Topic=test.venkata,Partition=1,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=14,Replica=3] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=2,Replica=3] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=0,Replica=4] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=23,Replica=3] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=48,Replica=4] -> ReplicaDeletionIneligible, [Topic=create.employee,Partition=1,Replica=4] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=43,Replica=0] -> ReplicaDeletionIneligible, [Topic=test.vankata,Partition=0,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=12,Replica=4] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=28,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=27,Replica=4] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=40,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=6,Replica=4] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=16,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=9,Replica=4] -> ReplicaDeletionIneligible, [Topic=create.employee,Partition=0,Replica=0] -> ReplicaDeletionIneligible, [Topic=test.venkata,Partition=0,Replica=5] -> OnlineReplica, [Topic=__consumer_offsets,Partition=1,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=18,Replica=4] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=46,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=47,Replica=3] -> ReplicaDeletionIneligible, [Topic=create.employee,Partition=0,Replica=3] -> ReplicaDeletionIneligible, [Topic=create.employee,Partition=2,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=15,Replica=4] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=44,Replica=3] -> ReplicaDeletionIneligible, [Topic=create.employee,Partition=0,Replica=4] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=4,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=8,Replica=3] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=39,Replica=4] -> ReplicaDeletionIneligible, [Topic=create.employee,Partition=1,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=36,Replica=4] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=20,Replica=3] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=11,Replica=3] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=34,Replica=0] -> ReplicaDeletionIneligible, [Topic=test.venkata,Partition=1,Replica=5] -> OnlineReplica, [Topic=__consumer_offsets,Partition=37,Replica=0] -> ReplicaDeletionIneligible, [Topic=create.assignment,Partition=0,Replica=4] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=32,Replica=3] -> ReplicaDeletionIneligible, [Topic=test.venkata,Partition=0,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=10,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=7,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=31,Replica=0] -> ReplicaDeletionIneligible, [Topic=create.employee,Partition=1,Replica=3] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=42,Replica=4] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=5,Replica=3] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=30,Replica=4] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=38,Replica=3] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=29,Replica=3] -> ReplicaDeletionIneligible, [Topic=test.venkata,Partition=2,Replica=4] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=13,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=25,Replica=0] -> ReplicaDeletionIneligible, [Topic=test.venkataclear,Partition=0,Replica=5] -> OnlineReplica, [Topic=__consumer_offsets,Partition=21,Replica=4] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=41,Replica=3] -> ReplicaDeletionIneligible, [Topic=test.venkata,Partition=2,Replica=0] -> ReplicaDeletionIneligible, [Topic=test.venkata,Partition=1,Replica=4] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=35,Replica=3] -> ReplicaDeletionIneligible) (kafka.controller.ReplicaStateMachine)
[2019-02-05 12:08:17,569] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for test.venkata-0. Select 5 from ISR 5 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-05 12:08:17,570] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":5,"leader_epoch":4,"isr":[5]} for offline partition test.venkata-0 (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-05 12:08:17,573] DEBUG [PartitionStateMachine controllerId=5] After leader election, leader cache for test.venkata-0 is updated to (Leader:5,ISR:5,LeaderEpoch:4,ControllerEpoch:13) (kafka.controller.PartitionStateMachine)
[2019-02-05 12:08:17,626] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for test.venkata-1. Select 5 from ISR 5 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-05 12:08:17,626] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":5,"leader_epoch":4,"isr":[5]} for offline partition test.venkata-1 (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-05 12:08:17,627] DEBUG [PartitionStateMachine controllerId=5] After leader election, leader cache for test.venkata-1 is updated to (Leader:5,ISR:5,LeaderEpoch:4,ControllerEpoch:13) (kafka.controller.PartitionStateMachine)
[2019-02-05 12:08:17,703] INFO [PartitionStateMachine controllerId=5] Started partition state machine with initial state -> Map(test.venkataclear-0 -> OnlinePartition, __consumer_offsets-19 -> OfflinePartition, test.venkata-0 -> OnlinePartition, __consumer_offsets-30 -> OfflinePartition, __consumer_offsets-47 -> OfflinePartition, __consumer_offsets-29 -> OfflinePartition, __consumer_offsets-41 -> OfflinePartition, __consumer_offsets-39 -> OfflinePartition, __consumer_offsets-10 -> OfflinePartition, __consumer_offsets-17 -> OfflinePartition, create.employee-2 -> OfflinePartition, __consumer_offsets-14 -> OfflinePartition, __consumer_offsets-40 -> OfflinePartition, testtopic-0 -> OfflinePartition, __consumer_offsets-18 -> OfflinePartition, __consumer_offsets-0 -> OfflinePartition, __consumer_offsets-26 -> OfflinePartition, __consumer_offsets-24 -> OfflinePartition, __consumer_offsets-33 -> OfflinePartition, __consumer_offsets-20 -> OfflinePartition, test.vankata-0 -> OfflinePartition, __consumer_offsets-21 -> OfflinePartition, __consumer_offsets-3 -> OfflinePartition, __consumer_offsets-5 -> OfflinePartition, __consumer_offsets-22 -> OfflinePartition, test.venkata-1 -> OnlinePartition, __consumer_offsets-12 -> OfflinePartition, __consumer_offsets-8 -> OfflinePartition, __consumer_offsets-23 -> OfflinePartition, __consumer_offsets-15 -> OfflinePartition, __consumer_offsets-11 -> OfflinePartition, __consumer_offsets-48 -> OfflinePartition, __consumer_offsets-13 -> OfflinePartition, __consumer_offsets-49 -> OfflinePartition, __consumer_offsets-6 -> OfflinePartition, __consumer_offsets-28 -> OfflinePartition, __consumer_offsets-4 -> OfflinePartition, __consumer_offsets-37 -> OfflinePartition, __consumer_offsets-31 -> OfflinePartition, __consumer_offsets-44 -> OfflinePartition, __consumer_offsets-42 -> OfflinePartition, __consumer_offsets-34 -> OfflinePartition, __consumer_offsets-46 -> OfflinePartition, test.venkata-2 -> OnlinePartition, __consumer_offsets-25 -> OfflinePartition, __consumer_offsets-45 -> OfflinePartition, __consumer_offsets-27 -> OfflinePartition, __consumer_offsets-32 -> OfflinePartition, __consumer_offsets-43 -> OfflinePartition, create.employee-0 -> OfflinePartition, __consumer_offsets-36 -> OfflinePartition, __consumer_offsets-35 -> OfflinePartition, __consumer_offsets-7 -> OfflinePartition, __consumer_offsets-38 -> OfflinePartition, __consumer_offsets-9 -> OfflinePartition, __consumer_offsets-1 -> OfflinePartition, create.assignment-0 -> OfflinePartition, __consumer_offsets-2 -> OfflinePartition, __consumer_offsets-16 -> OfflinePartition, create.employee-1 -> OfflinePartition) (kafka.controller.PartitionStateMachine)
[2019-02-05 12:08:17,709] INFO [Controller id=5] Ready to serve as the new controller with epoch 13 (kafka.controller.KafkaController)
[2019-02-05 12:08:17,712] INFO [Controller id=5] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2019-02-05 12:08:17,712] INFO [Controller id=5] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2019-02-05 12:08:17,713] INFO [Controller id=5] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2019-02-05 12:08:17,713] INFO [Controller id=5] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2019-02-05 12:08:17,713] INFO [Controller id=5] Starting preferred replica leader election for partitions  (kafka.controller.KafkaController)
[2019-02-05 12:08:17,714] INFO [PartitionStateMachine controllerId=5] Invoking state change to OnlinePartition for partitions  (kafka.controller.PartitionStateMachine)
[2019-02-05 12:08:17,719] INFO [Controller id=5] Starting the controller scheduler (kafka.controller.KafkaController)
[2019-02-05 12:08:18,880] INFO [Controller id=5] Newly added brokers: 4, deleted brokers: , all live brokers: 4,5 (kafka.controller.KafkaController)
[2019-02-05 12:08:18,881] DEBUG [Channel manager on controller 5]: Controller 5 trying to connect to broker 4 (kafka.controller.ControllerChannelManager)
[2019-02-05 12:08:18,883] INFO [Controller-5-to-broker-4-send-thread]: Starting (kafka.controller.RequestSendThread)
[2019-02-05 12:08:18,885] INFO [Controller id=5] New broker startup callback for 4 (kafka.controller.KafkaController)
[2019-02-05 12:08:18,892] INFO [Controller-5-to-broker-4-send-thread]: Controller 5 connected to localhost:9094 (id: 4 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2019-02-05 12:08:18,893] INFO [ReplicaStateMachine controllerId=5] Invoking state change to OnlineReplica for replicas [Topic=__consumer_offsets,Partition=21,Replica=4],[Topic=create.employee,Partition=2,Replica=4],[Topic=test.venkata,Partition=0,Replica=4],[Topic=__consumer_offsets,Partition=39,Replica=4],[Topic=create.assignment,Partition=0,Replica=4],[Topic=__consumer_offsets,Partition=3,Replica=4],[Topic=__consumer_offsets,Partition=0,Replica=4],[Topic=test.venkata,Partition=1,Replica=4],[Topic=create.employee,Partition=1,Replica=4],[Topic=__consumer_offsets,Partition=9,Replica=4],[Topic=__consumer_offsets,Partition=18,Replica=4],[Topic=create.employee,Partition=0,Replica=4],[Topic=__consumer_offsets,Partition=45,Replica=4],[Topic=__consumer_offsets,Partition=42,Replica=4],[Topic=__consumer_offsets,Partition=12,Replica=4],[Topic=__consumer_offsets,Partition=24,Replica=4],[Topic=__consumer_offsets,Partition=36,Replica=4],[Topic=__consumer_offsets,Partition=27,Replica=4],[Topic=test.venkata,Partition=2,Replica=4],[Topic=__consumer_offsets,Partition=48,Replica=4],[Topic=__consumer_offsets,Partition=33,Replica=4],[Topic=__consumer_offsets,Partition=15,Replica=4],[Topic=__consumer_offsets,Partition=30,Replica=4],[Topic=__consumer_offsets,Partition=6,Replica=4],[Topic=testtopic,Partition=0,Replica=4] (kafka.controller.ReplicaStateMachine)
[2019-02-05 12:08:18,906] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for __consumer_offsets-30. Select 4 from ISR 4 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-05 12:08:18,906] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":4,"leader_epoch":8,"isr":[4]} for offline partition __consumer_offsets-30 (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-05 12:08:18,917] DEBUG [PartitionStateMachine controllerId=5] After leader election, leader cache for __consumer_offsets-30 is updated to (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13) (kafka.controller.PartitionStateMachine)
[2019-02-05 12:08:18,937] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for __consumer_offsets-39. Select 4 from ISR 4 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-05 12:08:18,937] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":4,"leader_epoch":8,"isr":[4]} for offline partition __consumer_offsets-39 (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-05 12:08:18,939] DEBUG [PartitionStateMachine controllerId=5] After leader election, leader cache for __consumer_offsets-39 is updated to (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13) (kafka.controller.PartitionStateMachine)
[2019-02-05 12:08:18,946] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for create.employee-2. Select 4 from ISR 4 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-05 12:08:18,946] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":4,"leader_epoch":15,"isr":[4]} for offline partition create.employee-2 (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-05 12:08:18,947] DEBUG [PartitionStateMachine controllerId=5] After leader election, leader cache for create.employee-2 is updated to (Leader:4,ISR:4,LeaderEpoch:15,ControllerEpoch:13) (kafka.controller.PartitionStateMachine)
[2019-02-05 12:08:18,953] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for testtopic-0. Select 4 from ISR 4 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-05 12:08:18,953] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":4,"leader_epoch":8,"isr":[4]} for offline partition testtopic-0 (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-05 12:08:18,955] DEBUG [PartitionStateMachine controllerId=5] After leader election, leader cache for testtopic-0 is updated to (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13) (kafka.controller.PartitionStateMachine)
[2019-02-05 12:08:18,956] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for __consumer_offsets-18. Select 4 from ISR 4 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-05 12:08:18,956] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":4,"leader_epoch":8,"isr":[4]} for offline partition __consumer_offsets-18 (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-05 12:08:18,958] DEBUG [PartitionStateMachine controllerId=5] After leader election, leader cache for __consumer_offsets-18 is updated to (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13) (kafka.controller.PartitionStateMachine)
[2019-02-05 12:08:18,959] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for __consumer_offsets-0. Select 4 from ISR 4 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-05 12:08:18,959] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":4,"leader_epoch":8,"isr":[4]} for offline partition __consumer_offsets-0 (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-05 12:08:18,961] DEBUG [PartitionStateMachine controllerId=5] After leader election, leader cache for __consumer_offsets-0 is updated to (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13) (kafka.controller.PartitionStateMachine)
[2019-02-05 12:08:18,964] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for __consumer_offsets-24. Select 4 from ISR 4 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-05 12:08:18,964] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":4,"leader_epoch":8,"isr":[4]} for offline partition __consumer_offsets-24 (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-05 12:08:18,965] DEBUG [PartitionStateMachine controllerId=5] After leader election, leader cache for __consumer_offsets-24 is updated to (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13) (kafka.controller.PartitionStateMachine)
[2019-02-05 12:08:18,966] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for __consumer_offsets-33. Select 4 from ISR 4 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-05 12:08:18,967] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":4,"leader_epoch":8,"isr":[4]} for offline partition __consumer_offsets-33 (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-05 12:08:18,968] DEBUG [PartitionStateMachine controllerId=5] After leader election, leader cache for __consumer_offsets-33 is updated to (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13) (kafka.controller.PartitionStateMachine)
[2019-02-05 12:08:18,972] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for __consumer_offsets-21. Select 4 from ISR 4 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-05 12:08:18,973] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":4,"leader_epoch":8,"isr":[4]} for offline partition __consumer_offsets-21 (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-05 12:08:18,974] DEBUG [PartitionStateMachine controllerId=5] After leader election, leader cache for __consumer_offsets-21 is updated to (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13) (kafka.controller.PartitionStateMachine)
[2019-02-05 12:08:18,975] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for __consumer_offsets-3. Select 4 from ISR 4 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-05 12:08:18,975] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":4,"leader_epoch":8,"isr":[4]} for offline partition __consumer_offsets-3 (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-05 12:08:18,976] DEBUG [PartitionStateMachine controllerId=5] After leader election, leader cache for __consumer_offsets-3 is updated to (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13) (kafka.controller.PartitionStateMachine)
[2019-02-05 12:08:18,981] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for __consumer_offsets-12. Select 4 from ISR 4 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-05 12:08:18,981] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":4,"leader_epoch":8,"isr":[4]} for offline partition __consumer_offsets-12 (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-05 12:08:18,983] DEBUG [PartitionStateMachine controllerId=5] After leader election, leader cache for __consumer_offsets-12 is updated to (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13) (kafka.controller.PartitionStateMachine)
[2019-02-05 12:08:18,987] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for __consumer_offsets-15. Select 4 from ISR 4 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-05 12:08:18,987] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":4,"leader_epoch":8,"isr":[4]} for offline partition __consumer_offsets-15 (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-05 12:08:18,988] DEBUG [PartitionStateMachine controllerId=5] After leader election, leader cache for __consumer_offsets-15 is updated to (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13) (kafka.controller.PartitionStateMachine)
[2019-02-05 12:08:18,991] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for __consumer_offsets-48. Select 4 from ISR 4 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-05 12:08:18,991] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":4,"leader_epoch":8,"isr":[4]} for offline partition __consumer_offsets-48 (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-05 12:08:18,992] DEBUG [PartitionStateMachine controllerId=5] After leader election, leader cache for __consumer_offsets-48 is updated to (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13) (kafka.controller.PartitionStateMachine)
[2019-02-05 12:08:18,997] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for __consumer_offsets-6. Select 4 from ISR 4 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-05 12:08:18,997] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":4,"leader_epoch":8,"isr":[4]} for offline partition __consumer_offsets-6 (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-05 12:08:18,998] DEBUG [PartitionStateMachine controllerId=5] After leader election, leader cache for __consumer_offsets-6 is updated to (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13) (kafka.controller.PartitionStateMachine)
[2019-02-05 12:08:19,007] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for __consumer_offsets-42. Select 4 from ISR 4 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-05 12:08:19,007] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":4,"leader_epoch":8,"isr":[4]} for offline partition __consumer_offsets-42 (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-05 12:08:19,008] DEBUG [PartitionStateMachine controllerId=5] After leader election, leader cache for __consumer_offsets-42 is updated to (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13) (kafka.controller.PartitionStateMachine)
[2019-02-05 12:08:19,014] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for __consumer_offsets-45. Select 4 from ISR 4 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-05 12:08:19,014] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":4,"leader_epoch":8,"isr":[4]} for offline partition __consumer_offsets-45 (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-05 12:08:19,015] DEBUG [PartitionStateMachine controllerId=5] After leader election, leader cache for __consumer_offsets-45 is updated to (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13) (kafka.controller.PartitionStateMachine)
[2019-02-05 12:08:19,015] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for __consumer_offsets-27. Select 4 from ISR 4 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-05 12:08:19,015] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":4,"leader_epoch":8,"isr":[4]} for offline partition __consumer_offsets-27 (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-05 12:08:19,017] DEBUG [PartitionStateMachine controllerId=5] After leader election, leader cache for __consumer_offsets-27 is updated to (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13) (kafka.controller.PartitionStateMachine)
[2019-02-05 12:08:19,021] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for create.employee-0. Select 4 from ISR 4 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-05 12:08:19,021] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":4,"leader_epoch":15,"isr":[4]} for offline partition create.employee-0 (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-05 12:08:19,022] DEBUG [PartitionStateMachine controllerId=5] After leader election, leader cache for create.employee-0 is updated to (Leader:4,ISR:4,LeaderEpoch:15,ControllerEpoch:13) (kafka.controller.PartitionStateMachine)
[2019-02-05 12:08:19,023] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for __consumer_offsets-36. Select 4 from ISR 4 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-05 12:08:19,023] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":4,"leader_epoch":8,"isr":[4]} for offline partition __consumer_offsets-36 (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-05 12:08:19,024] DEBUG [PartitionStateMachine controllerId=5] After leader election, leader cache for __consumer_offsets-36 is updated to (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13) (kafka.controller.PartitionStateMachine)
[2019-02-05 12:08:19,029] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for __consumer_offsets-9. Select 4 from ISR 4 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-05 12:08:19,029] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":4,"leader_epoch":8,"isr":[4]} for offline partition __consumer_offsets-9 (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-05 12:08:19,030] DEBUG [PartitionStateMachine controllerId=5] After leader election, leader cache for __consumer_offsets-9 is updated to (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13) (kafka.controller.PartitionStateMachine)
[2019-02-05 12:08:19,033] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for create.assignment-0. Select 4 from ISR 4 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-05 12:08:19,033] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":4,"leader_epoch":8,"isr":[4]} for offline partition create.assignment-0 (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-05 12:08:19,034] DEBUG [PartitionStateMachine controllerId=5] After leader election, leader cache for create.assignment-0 is updated to (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13) (kafka.controller.PartitionStateMachine)
[2019-02-05 12:08:19,037] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for create.employee-1. Select 4 from ISR 4 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-05 12:08:19,037] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":4,"leader_epoch":16,"isr":[4]} for offline partition create.employee-1 (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-05 12:08:19,038] DEBUG [PartitionStateMachine controllerId=5] After leader election, leader cache for create.employee-1 is updated to (Leader:4,ISR:4,LeaderEpoch:16,ControllerEpoch:13) (kafka.controller.PartitionStateMachine)
[2019-02-05 12:08:20,184] DEBUG [Controller id=5] Sending MetadataRequest to Brokers:Vector(4, 5) for TopicAndPartitions:Set(test.venkata-0, test.venkata-1) (kafka.controller.KafkaController)
[2019-02-05 12:08:22,724] TRACE [Controller id=5] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-02-05 12:08:22,726] DEBUG [Controller id=5] Preferred replicas by broker Map(5 -> Map(test.venkataclear-0 -> Vector(5), test.venkata-2 -> Vector(5, 0, 4)), 4 -> Map(__consumer_offsets-30 -> Vector(4), __consumer_offsets-39 -> Vector(4), testtopic-0 -> Vector(4), __consumer_offsets-18 -> Vector(4), __consumer_offsets-0 -> Vector(4), __consumer_offsets-24 -> Vector(4), __consumer_offsets-33 -> Vector(4), __consumer_offsets-3 -> Vector(4), __consumer_offsets-21 -> Vector(4), test.venkata-1 -> Vector(4, 5, 0), __consumer_offsets-12 -> Vector(4), __consumer_offsets-15 -> Vector(4), __consumer_offsets-48 -> Vector(4), __consumer_offsets-6 -> Vector(4), __consumer_offsets-42 -> Vector(4), __consumer_offsets-27 -> Vector(4), __consumer_offsets-45 -> Vector(4), __consumer_offsets-36 -> Vector(4), create.employee-0 -> Vector(4, 0, 3), __consumer_offsets-9 -> Vector(4), create.assignment-0 -> Vector(4)), 3 -> Map(__consumer_offsets-47 -> Vector(3), __consumer_offsets-29 -> Vector(3), __consumer_offsets-41 -> Vector(3), __consumer_offsets-17 -> Vector(3), create.employee-2 -> Vector(3, 4, 0), __consumer_offsets-14 -> Vector(3), __consumer_offsets-26 -> Vector(3), __consumer_offsets-20 -> Vector(3), __consumer_offsets-5 -> Vector(3), __consumer_offsets-8 -> Vector(3), __consumer_offsets-23 -> Vector(3), __consumer_offsets-11 -> Vector(3), __consumer_offsets-44 -> Vector(3), __consumer_offsets-32 -> Vector(3), __consumer_offsets-35 -> Vector(3), __consumer_offsets-38 -> Vector(3), __consumer_offsets-2 -> Vector(3)), 0 -> Map(__consumer_offsets-19 -> Vector(0), test.venkata-0 -> Vector(0, 4, 5), __consumer_offsets-10 -> Vector(0), __consumer_offsets-40 -> Vector(0), test.vankata-0 -> Vector(0), __consumer_offsets-22 -> Vector(0), __consumer_offsets-13 -> Vector(0), __consumer_offsets-49 -> Vector(0), __consumer_offsets-28 -> Vector(0), __consumer_offsets-4 -> Vector(0), __consumer_offsets-37 -> Vector(0), __consumer_offsets-31 -> Vector(0), __consumer_offsets-46 -> Vector(0), __consumer_offsets-34 -> Vector(0), __consumer_offsets-25 -> Vector(0), __consumer_offsets-43 -> Vector(0), __consumer_offsets-7 -> Vector(0), __consumer_offsets-1 -> Vector(0), __consumer_offsets-16 -> Vector(0), create.employee-1 -> Vector(0, 3, 4))) (kafka.controller.KafkaController)
[2019-02-05 12:08:22,728] DEBUG [Controller id=5] Topics not in preferred replica Map() (kafka.controller.KafkaController)
[2019-02-05 12:08:22,728] TRACE [Controller id=5] Leader imbalance ratio for broker 5 is 0.0 (kafka.controller.KafkaController)
[2019-02-05 12:08:22,729] DEBUG [Controller id=5] Topics not in preferred replica Map(test.venkata-1 -> Vector(4, 5, 0)) (kafka.controller.KafkaController)
[2019-02-05 12:08:22,729] TRACE [Controller id=5] Leader imbalance ratio for broker 4 is 0.047619047619047616 (kafka.controller.KafkaController)
[2019-02-05 12:08:22,729] DEBUG [Controller id=5] Topics not in preferred replica Map(create.employee-2 -> Vector(3, 4, 0)) (kafka.controller.KafkaController)
[2019-02-05 12:08:22,729] TRACE [Controller id=5] Leader imbalance ratio for broker 3 is 0.058823529411764705 (kafka.controller.KafkaController)
[2019-02-05 12:08:22,729] DEBUG [Controller id=5] Topics not in preferred replica Map(__consumer_offsets-19 -> Vector(0), test.venkata-0 -> Vector(0, 4, 5), __consumer_offsets-10 -> Vector(0), __consumer_offsets-40 -> Vector(0), test.vankata-0 -> Vector(0), __consumer_offsets-22 -> Vector(0), __consumer_offsets-13 -> Vector(0), __consumer_offsets-49 -> Vector(0), __consumer_offsets-28 -> Vector(0), __consumer_offsets-4 -> Vector(0), __consumer_offsets-37 -> Vector(0), __consumer_offsets-31 -> Vector(0), __consumer_offsets-34 -> Vector(0), __consumer_offsets-46 -> Vector(0), __consumer_offsets-25 -> Vector(0), __consumer_offsets-43 -> Vector(0), __consumer_offsets-7 -> Vector(0), __consumer_offsets-1 -> Vector(0), create.employee-1 -> Vector(0, 3, 4), __consumer_offsets-16 -> Vector(0)) (kafka.controller.KafkaController)
[2019-02-05 12:08:22,729] TRACE [Controller id=5] Leader imbalance ratio for broker 0 is 1.0 (kafka.controller.KafkaController)
[2019-02-05 12:13:22,745] TRACE [Controller id=5] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-02-05 12:13:22,752] DEBUG [Controller id=5] Preferred replicas by broker Map(5 -> Map(test.venkataclear-0 -> Vector(5), test.venkata-2 -> Vector(5, 0, 4)), 4 -> Map(__consumer_offsets-30 -> Vector(4), __consumer_offsets-39 -> Vector(4), testtopic-0 -> Vector(4), __consumer_offsets-18 -> Vector(4), __consumer_offsets-0 -> Vector(4), __consumer_offsets-24 -> Vector(4), __consumer_offsets-33 -> Vector(4), __consumer_offsets-3 -> Vector(4), __consumer_offsets-21 -> Vector(4), test.venkata-1 -> Vector(4, 5, 0), __consumer_offsets-12 -> Vector(4), __consumer_offsets-15 -> Vector(4), __consumer_offsets-48 -> Vector(4), __consumer_offsets-6 -> Vector(4), __consumer_offsets-42 -> Vector(4), __consumer_offsets-27 -> Vector(4), __consumer_offsets-45 -> Vector(4), __consumer_offsets-36 -> Vector(4), create.employee-0 -> Vector(4, 0, 3), __consumer_offsets-9 -> Vector(4), create.assignment-0 -> Vector(4)), 3 -> Map(__consumer_offsets-47 -> Vector(3), __consumer_offsets-29 -> Vector(3), __consumer_offsets-41 -> Vector(3), __consumer_offsets-17 -> Vector(3), create.employee-2 -> Vector(3, 4, 0), __consumer_offsets-14 -> Vector(3), __consumer_offsets-26 -> Vector(3), __consumer_offsets-20 -> Vector(3), __consumer_offsets-5 -> Vector(3), __consumer_offsets-8 -> Vector(3), __consumer_offsets-23 -> Vector(3), __consumer_offsets-11 -> Vector(3), __consumer_offsets-44 -> Vector(3), __consumer_offsets-32 -> Vector(3), __consumer_offsets-35 -> Vector(3), __consumer_offsets-38 -> Vector(3), __consumer_offsets-2 -> Vector(3)), 0 -> Map(__consumer_offsets-19 -> Vector(0), test.venkata-0 -> Vector(0, 4, 5), __consumer_offsets-10 -> Vector(0), __consumer_offsets-40 -> Vector(0), test.vankata-0 -> Vector(0), __consumer_offsets-22 -> Vector(0), __consumer_offsets-13 -> Vector(0), __consumer_offsets-49 -> Vector(0), __consumer_offsets-28 -> Vector(0), __consumer_offsets-4 -> Vector(0), __consumer_offsets-37 -> Vector(0), __consumer_offsets-31 -> Vector(0), __consumer_offsets-46 -> Vector(0), __consumer_offsets-34 -> Vector(0), __consumer_offsets-25 -> Vector(0), __consumer_offsets-43 -> Vector(0), __consumer_offsets-7 -> Vector(0), __consumer_offsets-1 -> Vector(0), __consumer_offsets-16 -> Vector(0), create.employee-1 -> Vector(0, 3, 4))) (kafka.controller.KafkaController)
[2019-02-05 12:13:22,753] DEBUG [Controller id=5] Topics not in preferred replica Map() (kafka.controller.KafkaController)
[2019-02-05 12:13:22,753] TRACE [Controller id=5] Leader imbalance ratio for broker 5 is 0.0 (kafka.controller.KafkaController)
[2019-02-05 12:13:22,753] DEBUG [Controller id=5] Topics not in preferred replica Map(test.venkata-1 -> Vector(4, 5, 0)) (kafka.controller.KafkaController)
[2019-02-05 12:13:22,753] TRACE [Controller id=5] Leader imbalance ratio for broker 4 is 0.047619047619047616 (kafka.controller.KafkaController)
[2019-02-05 12:13:22,753] DEBUG [Controller id=5] Topics not in preferred replica Map(create.employee-2 -> Vector(3, 4, 0)) (kafka.controller.KafkaController)
[2019-02-05 12:13:22,753] TRACE [Controller id=5] Leader imbalance ratio for broker 3 is 0.058823529411764705 (kafka.controller.KafkaController)
[2019-02-05 12:13:22,754] DEBUG [Controller id=5] Topics not in preferred replica Map(__consumer_offsets-19 -> Vector(0), test.venkata-0 -> Vector(0, 4, 5), __consumer_offsets-10 -> Vector(0), __consumer_offsets-40 -> Vector(0), test.vankata-0 -> Vector(0), __consumer_offsets-22 -> Vector(0), __consumer_offsets-13 -> Vector(0), __consumer_offsets-49 -> Vector(0), __consumer_offsets-28 -> Vector(0), __consumer_offsets-4 -> Vector(0), __consumer_offsets-37 -> Vector(0), __consumer_offsets-31 -> Vector(0), __consumer_offsets-34 -> Vector(0), __consumer_offsets-46 -> Vector(0), __consumer_offsets-25 -> Vector(0), __consumer_offsets-43 -> Vector(0), __consumer_offsets-7 -> Vector(0), __consumer_offsets-1 -> Vector(0), create.employee-1 -> Vector(0, 3, 4), __consumer_offsets-16 -> Vector(0)) (kafka.controller.KafkaController)
[2019-02-05 12:13:22,754] TRACE [Controller id=5] Leader imbalance ratio for broker 0 is 1.0 (kafka.controller.KafkaController)
[2019-02-05 12:18:22,758] TRACE [Controller id=5] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-02-05 12:18:22,759] DEBUG [Controller id=5] Preferred replicas by broker Map(5 -> Map(test.venkataclear-0 -> Vector(5), test.venkata-2 -> Vector(5, 0, 4)), 4 -> Map(__consumer_offsets-30 -> Vector(4), __consumer_offsets-39 -> Vector(4), testtopic-0 -> Vector(4), __consumer_offsets-18 -> Vector(4), __consumer_offsets-0 -> Vector(4), __consumer_offsets-24 -> Vector(4), __consumer_offsets-33 -> Vector(4), __consumer_offsets-3 -> Vector(4), __consumer_offsets-21 -> Vector(4), test.venkata-1 -> Vector(4, 5, 0), __consumer_offsets-12 -> Vector(4), __consumer_offsets-15 -> Vector(4), __consumer_offsets-48 -> Vector(4), __consumer_offsets-6 -> Vector(4), __consumer_offsets-42 -> Vector(4), __consumer_offsets-27 -> Vector(4), __consumer_offsets-45 -> Vector(4), __consumer_offsets-36 -> Vector(4), create.employee-0 -> Vector(4, 0, 3), __consumer_offsets-9 -> Vector(4), create.assignment-0 -> Vector(4)), 3 -> Map(__consumer_offsets-47 -> Vector(3), __consumer_offsets-29 -> Vector(3), __consumer_offsets-41 -> Vector(3), __consumer_offsets-17 -> Vector(3), create.employee-2 -> Vector(3, 4, 0), __consumer_offsets-14 -> Vector(3), __consumer_offsets-26 -> Vector(3), __consumer_offsets-20 -> Vector(3), __consumer_offsets-5 -> Vector(3), __consumer_offsets-8 -> Vector(3), __consumer_offsets-23 -> Vector(3), __consumer_offsets-11 -> Vector(3), __consumer_offsets-44 -> Vector(3), __consumer_offsets-32 -> Vector(3), __consumer_offsets-35 -> Vector(3), __consumer_offsets-38 -> Vector(3), __consumer_offsets-2 -> Vector(3)), 0 -> Map(__consumer_offsets-19 -> Vector(0), test.venkata-0 -> Vector(0, 4, 5), __consumer_offsets-10 -> Vector(0), __consumer_offsets-40 -> Vector(0), test.vankata-0 -> Vector(0), __consumer_offsets-22 -> Vector(0), __consumer_offsets-13 -> Vector(0), __consumer_offsets-49 -> Vector(0), __consumer_offsets-28 -> Vector(0), __consumer_offsets-4 -> Vector(0), __consumer_offsets-37 -> Vector(0), __consumer_offsets-31 -> Vector(0), __consumer_offsets-46 -> Vector(0), __consumer_offsets-34 -> Vector(0), __consumer_offsets-25 -> Vector(0), __consumer_offsets-43 -> Vector(0), __consumer_offsets-7 -> Vector(0), __consumer_offsets-1 -> Vector(0), __consumer_offsets-16 -> Vector(0), create.employee-1 -> Vector(0, 3, 4))) (kafka.controller.KafkaController)
[2019-02-05 12:18:22,759] DEBUG [Controller id=5] Topics not in preferred replica Map() (kafka.controller.KafkaController)
[2019-02-05 12:18:22,759] TRACE [Controller id=5] Leader imbalance ratio for broker 5 is 0.0 (kafka.controller.KafkaController)
[2019-02-05 12:18:22,759] DEBUG [Controller id=5] Topics not in preferred replica Map(test.venkata-1 -> Vector(4, 5, 0)) (kafka.controller.KafkaController)
[2019-02-05 12:18:22,759] TRACE [Controller id=5] Leader imbalance ratio for broker 4 is 0.047619047619047616 (kafka.controller.KafkaController)
[2019-02-05 12:18:22,760] DEBUG [Controller id=5] Topics not in preferred replica Map(create.employee-2 -> Vector(3, 4, 0)) (kafka.controller.KafkaController)
[2019-02-05 12:18:22,760] TRACE [Controller id=5] Leader imbalance ratio for broker 3 is 0.058823529411764705 (kafka.controller.KafkaController)
[2019-02-05 12:18:22,760] DEBUG [Controller id=5] Topics not in preferred replica Map(__consumer_offsets-19 -> Vector(0), test.venkata-0 -> Vector(0, 4, 5), __consumer_offsets-10 -> Vector(0), __consumer_offsets-40 -> Vector(0), test.vankata-0 -> Vector(0), __consumer_offsets-22 -> Vector(0), __consumer_offsets-13 -> Vector(0), __consumer_offsets-49 -> Vector(0), __consumer_offsets-28 -> Vector(0), __consumer_offsets-4 -> Vector(0), __consumer_offsets-37 -> Vector(0), __consumer_offsets-31 -> Vector(0), __consumer_offsets-34 -> Vector(0), __consumer_offsets-46 -> Vector(0), __consumer_offsets-25 -> Vector(0), __consumer_offsets-43 -> Vector(0), __consumer_offsets-7 -> Vector(0), __consumer_offsets-1 -> Vector(0), create.employee-1 -> Vector(0, 3, 4), __consumer_offsets-16 -> Vector(0)) (kafka.controller.KafkaController)
[2019-02-05 12:18:22,760] TRACE [Controller id=5] Leader imbalance ratio for broker 0 is 1.0 (kafka.controller.KafkaController)
[2019-02-05 12:23:22,768] TRACE [Controller id=5] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-02-05 12:23:22,769] DEBUG [Controller id=5] Preferred replicas by broker Map(5 -> Map(test.venkataclear-0 -> Vector(5), test.venkata-2 -> Vector(5, 0, 4)), 4 -> Map(__consumer_offsets-30 -> Vector(4), __consumer_offsets-39 -> Vector(4), testtopic-0 -> Vector(4), __consumer_offsets-18 -> Vector(4), __consumer_offsets-0 -> Vector(4), __consumer_offsets-24 -> Vector(4), __consumer_offsets-33 -> Vector(4), __consumer_offsets-3 -> Vector(4), __consumer_offsets-21 -> Vector(4), test.venkata-1 -> Vector(4, 5, 0), __consumer_offsets-12 -> Vector(4), __consumer_offsets-15 -> Vector(4), __consumer_offsets-48 -> Vector(4), __consumer_offsets-6 -> Vector(4), __consumer_offsets-42 -> Vector(4), __consumer_offsets-27 -> Vector(4), __consumer_offsets-45 -> Vector(4), __consumer_offsets-36 -> Vector(4), create.employee-0 -> Vector(4, 0, 3), __consumer_offsets-9 -> Vector(4), create.assignment-0 -> Vector(4)), 3 -> Map(__consumer_offsets-47 -> Vector(3), __consumer_offsets-29 -> Vector(3), __consumer_offsets-41 -> Vector(3), __consumer_offsets-17 -> Vector(3), create.employee-2 -> Vector(3, 4, 0), __consumer_offsets-14 -> Vector(3), __consumer_offsets-26 -> Vector(3), __consumer_offsets-20 -> Vector(3), __consumer_offsets-5 -> Vector(3), __consumer_offsets-8 -> Vector(3), __consumer_offsets-23 -> Vector(3), __consumer_offsets-11 -> Vector(3), __consumer_offsets-44 -> Vector(3), __consumer_offsets-32 -> Vector(3), __consumer_offsets-35 -> Vector(3), __consumer_offsets-38 -> Vector(3), __consumer_offsets-2 -> Vector(3)), 0 -> Map(__consumer_offsets-19 -> Vector(0), test.venkata-0 -> Vector(0, 4, 5), __consumer_offsets-10 -> Vector(0), __consumer_offsets-40 -> Vector(0), test.vankata-0 -> Vector(0), __consumer_offsets-22 -> Vector(0), __consumer_offsets-13 -> Vector(0), __consumer_offsets-49 -> Vector(0), __consumer_offsets-28 -> Vector(0), __consumer_offsets-4 -> Vector(0), __consumer_offsets-37 -> Vector(0), __consumer_offsets-31 -> Vector(0), __consumer_offsets-46 -> Vector(0), __consumer_offsets-34 -> Vector(0), __consumer_offsets-25 -> Vector(0), __consumer_offsets-43 -> Vector(0), __consumer_offsets-7 -> Vector(0), __consumer_offsets-1 -> Vector(0), __consumer_offsets-16 -> Vector(0), create.employee-1 -> Vector(0, 3, 4))) (kafka.controller.KafkaController)
[2019-02-05 12:23:22,769] DEBUG [Controller id=5] Topics not in preferred replica Map() (kafka.controller.KafkaController)
[2019-02-05 12:23:22,769] TRACE [Controller id=5] Leader imbalance ratio for broker 5 is 0.0 (kafka.controller.KafkaController)
[2019-02-05 12:23:22,769] DEBUG [Controller id=5] Topics not in preferred replica Map(test.venkata-1 -> Vector(4, 5, 0)) (kafka.controller.KafkaController)
[2019-02-05 12:23:22,769] TRACE [Controller id=5] Leader imbalance ratio for broker 4 is 0.047619047619047616 (kafka.controller.KafkaController)
[2019-02-05 12:23:22,769] DEBUG [Controller id=5] Topics not in preferred replica Map(create.employee-2 -> Vector(3, 4, 0)) (kafka.controller.KafkaController)
[2019-02-05 12:23:22,769] TRACE [Controller id=5] Leader imbalance ratio for broker 3 is 0.058823529411764705 (kafka.controller.KafkaController)
[2019-02-05 12:23:22,770] DEBUG [Controller id=5] Topics not in preferred replica Map(__consumer_offsets-19 -> Vector(0), test.venkata-0 -> Vector(0, 4, 5), __consumer_offsets-10 -> Vector(0), __consumer_offsets-40 -> Vector(0), test.vankata-0 -> Vector(0), __consumer_offsets-22 -> Vector(0), __consumer_offsets-13 -> Vector(0), __consumer_offsets-49 -> Vector(0), __consumer_offsets-28 -> Vector(0), __consumer_offsets-4 -> Vector(0), __consumer_offsets-37 -> Vector(0), __consumer_offsets-31 -> Vector(0), __consumer_offsets-34 -> Vector(0), __consumer_offsets-46 -> Vector(0), __consumer_offsets-25 -> Vector(0), __consumer_offsets-43 -> Vector(0), __consumer_offsets-7 -> Vector(0), __consumer_offsets-1 -> Vector(0), create.employee-1 -> Vector(0, 3, 4), __consumer_offsets-16 -> Vector(0)) (kafka.controller.KafkaController)
[2019-02-05 12:23:22,770] TRACE [Controller id=5] Leader imbalance ratio for broker 0 is 1.0 (kafka.controller.KafkaController)
[2019-02-05 12:28:22,776] TRACE [Controller id=5] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-02-05 12:28:22,777] DEBUG [Controller id=5] Preferred replicas by broker Map(5 -> Map(test.venkataclear-0 -> Vector(5), test.venkata-2 -> Vector(5, 0, 4)), 4 -> Map(__consumer_offsets-30 -> Vector(4), __consumer_offsets-39 -> Vector(4), testtopic-0 -> Vector(4), __consumer_offsets-18 -> Vector(4), __consumer_offsets-0 -> Vector(4), __consumer_offsets-24 -> Vector(4), __consumer_offsets-33 -> Vector(4), __consumer_offsets-3 -> Vector(4), __consumer_offsets-21 -> Vector(4), test.venkata-1 -> Vector(4, 5, 0), __consumer_offsets-12 -> Vector(4), __consumer_offsets-15 -> Vector(4), __consumer_offsets-48 -> Vector(4), __consumer_offsets-6 -> Vector(4), __consumer_offsets-42 -> Vector(4), __consumer_offsets-27 -> Vector(4), __consumer_offsets-45 -> Vector(4), __consumer_offsets-36 -> Vector(4), create.employee-0 -> Vector(4, 0, 3), __consumer_offsets-9 -> Vector(4), create.assignment-0 -> Vector(4)), 3 -> Map(__consumer_offsets-47 -> Vector(3), __consumer_offsets-29 -> Vector(3), __consumer_offsets-41 -> Vector(3), __consumer_offsets-17 -> Vector(3), create.employee-2 -> Vector(3, 4, 0), __consumer_offsets-14 -> Vector(3), __consumer_offsets-26 -> Vector(3), __consumer_offsets-20 -> Vector(3), __consumer_offsets-5 -> Vector(3), __consumer_offsets-8 -> Vector(3), __consumer_offsets-23 -> Vector(3), __consumer_offsets-11 -> Vector(3), __consumer_offsets-44 -> Vector(3), __consumer_offsets-32 -> Vector(3), __consumer_offsets-35 -> Vector(3), __consumer_offsets-38 -> Vector(3), __consumer_offsets-2 -> Vector(3)), 0 -> Map(__consumer_offsets-19 -> Vector(0), test.venkata-0 -> Vector(0, 4, 5), __consumer_offsets-10 -> Vector(0), __consumer_offsets-40 -> Vector(0), test.vankata-0 -> Vector(0), __consumer_offsets-22 -> Vector(0), __consumer_offsets-13 -> Vector(0), __consumer_offsets-49 -> Vector(0), __consumer_offsets-28 -> Vector(0), __consumer_offsets-4 -> Vector(0), __consumer_offsets-37 -> Vector(0), __consumer_offsets-31 -> Vector(0), __consumer_offsets-46 -> Vector(0), __consumer_offsets-34 -> Vector(0), __consumer_offsets-25 -> Vector(0), __consumer_offsets-43 -> Vector(0), __consumer_offsets-7 -> Vector(0), __consumer_offsets-1 -> Vector(0), __consumer_offsets-16 -> Vector(0), create.employee-1 -> Vector(0, 3, 4))) (kafka.controller.KafkaController)
[2019-02-05 12:28:22,777] DEBUG [Controller id=5] Topics not in preferred replica Map() (kafka.controller.KafkaController)
[2019-02-05 12:28:22,777] TRACE [Controller id=5] Leader imbalance ratio for broker 5 is 0.0 (kafka.controller.KafkaController)
[2019-02-05 12:28:22,777] DEBUG [Controller id=5] Topics not in preferred replica Map(test.venkata-1 -> Vector(4, 5, 0)) (kafka.controller.KafkaController)
[2019-02-05 12:28:22,777] TRACE [Controller id=5] Leader imbalance ratio for broker 4 is 0.047619047619047616 (kafka.controller.KafkaController)
[2019-02-05 12:28:22,778] DEBUG [Controller id=5] Topics not in preferred replica Map(create.employee-2 -> Vector(3, 4, 0)) (kafka.controller.KafkaController)
[2019-02-05 12:28:22,778] TRACE [Controller id=5] Leader imbalance ratio for broker 3 is 0.058823529411764705 (kafka.controller.KafkaController)
[2019-02-05 12:28:22,778] DEBUG [Controller id=5] Topics not in preferred replica Map(__consumer_offsets-19 -> Vector(0), test.venkata-0 -> Vector(0, 4, 5), __consumer_offsets-10 -> Vector(0), __consumer_offsets-40 -> Vector(0), test.vankata-0 -> Vector(0), __consumer_offsets-22 -> Vector(0), __consumer_offsets-13 -> Vector(0), __consumer_offsets-49 -> Vector(0), __consumer_offsets-28 -> Vector(0), __consumer_offsets-4 -> Vector(0), __consumer_offsets-37 -> Vector(0), __consumer_offsets-31 -> Vector(0), __consumer_offsets-34 -> Vector(0), __consumer_offsets-46 -> Vector(0), __consumer_offsets-25 -> Vector(0), __consumer_offsets-43 -> Vector(0), __consumer_offsets-7 -> Vector(0), __consumer_offsets-1 -> Vector(0), create.employee-1 -> Vector(0, 3, 4), __consumer_offsets-16 -> Vector(0)) (kafka.controller.KafkaController)
[2019-02-05 12:28:22,778] TRACE [Controller id=5] Leader imbalance ratio for broker 0 is 1.0 (kafka.controller.KafkaController)
[2019-02-05 12:30:04,361] INFO [Controller id=5] Shutting down broker 4 (kafka.controller.KafkaController)
[2019-02-05 12:30:04,361] DEBUG [Controller id=5] All shutting down brokers: 4 (kafka.controller.KafkaController)
[2019-02-05 12:30:04,361] DEBUG [Controller id=5] Live brokers: 5 (kafka.controller.KafkaController)
[2019-02-05 12:30:04,364] INFO [PartitionStateMachine controllerId=5] Invoking state change to OnlinePartition for partitions create.employee-0 (kafka.controller.PartitionStateMachine)
[2019-02-05 12:30:05,075] DEBUG The stop replica request (delete = true) sent to broker 4 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-02-05 12:30:05,075] DEBUG The stop replica request (delete = false) sent to broker 4 is [Topic=test.venkata,Partition=0,Replica=4] (kafka.controller.ControllerBrokerRequestBatch)
[2019-02-05 12:30:05,077] INFO [ReplicaStateMachine controllerId=5] Invoking state change to OfflineReplica for replicas [Topic=test.venkata,Partition=0,Replica=4] (kafka.controller.ReplicaStateMachine)
[2019-02-05 12:30:05,077] DEBUG [Controller id=5] Removing replica 4 from ISR 5,4 for partition test.venkata-0. (kafka.controller.KafkaController)
[2019-02-05 12:30:05,077] INFO [Controller-5-to-broker-4-send-thread]: Controller 5 connected to localhost:9094 (id: 4 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2019-02-05 12:30:05,093] INFO [Controller id=5] New leader and ISR for partition test.venkata-0 is {"leader":5,"leader_epoch":5,"isr":[5]} (kafka.controller.KafkaController)
[2019-02-05 12:30:05,095] WARN [Channel manager on controller 5]: Not sending request (type=LeaderAndIsRequest, controllerId=5, controllerEpoch=13, partitionStates={test.venkata-0=PartitionState(controllerEpoch=13, leader=5, leaderEpoch=5, isr=5, zkVersion=8, replicas=0,4,5, isNew=false)}, liveLeaders=(localhost:9095 (id: 5 rack: null))) to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2019-02-05 12:30:05,095] INFO [Controller-5-to-broker-5-send-thread]: Controller 5 connected to localhost:9095 (id: 5 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2019-02-05 12:30:05,095] DEBUG The stop replica request (delete = true) sent to broker 4 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-02-05 12:30:05,096] DEBUG The stop replica request (delete = false) sent to broker 4 is [Topic=test.venkata,Partition=0,Replica=4] (kafka.controller.ControllerBrokerRequestBatch)
[2019-02-05 12:30:05,096] INFO [PartitionStateMachine controllerId=5] Invoking state change to OnlinePartition for partitions create.employee-1 (kafka.controller.PartitionStateMachine)
[2019-02-05 12:30:05,098] DEBUG The stop replica request (delete = true) sent to broker 4 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-02-05 12:30:05,098] DEBUG The stop replica request (delete = false) sent to broker 4 is [Topic=test.venkata,Partition=1,Replica=4] (kafka.controller.ControllerBrokerRequestBatch)
[2019-02-05 12:30:05,098] INFO [ReplicaStateMachine controllerId=5] Invoking state change to OfflineReplica for replicas [Topic=test.venkata,Partition=1,Replica=4] (kafka.controller.ReplicaStateMachine)
[2019-02-05 12:30:05,098] DEBUG [Controller id=5] Removing replica 4 from ISR 5,4 for partition test.venkata-1. (kafka.controller.KafkaController)
[2019-02-05 12:30:05,100] INFO [Controller id=5] New leader and ISR for partition test.venkata-1 is {"leader":5,"leader_epoch":5,"isr":[5]} (kafka.controller.KafkaController)
[2019-02-05 12:30:05,101] WARN [Channel manager on controller 5]: Not sending request (type=LeaderAndIsRequest, controllerId=5, controllerEpoch=13, partitionStates={test.venkata-1=PartitionState(controllerEpoch=13, leader=5, leaderEpoch=5, isr=5, zkVersion=8, replicas=4,5,0, isNew=false)}, liveLeaders=(localhost:9095 (id: 5 rack: null))) to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2019-02-05 12:30:05,101] DEBUG The stop replica request (delete = true) sent to broker 4 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-02-05 12:30:05,101] DEBUG The stop replica request (delete = false) sent to broker 4 is [Topic=test.venkata,Partition=1,Replica=4] (kafka.controller.ControllerBrokerRequestBatch)
[2019-02-05 12:30:05,101] INFO [PartitionStateMachine controllerId=5] Invoking state change to OnlinePartition for partitions create.employee-2 (kafka.controller.PartitionStateMachine)
[2019-02-05 12:30:05,103] DEBUG The stop replica request (delete = true) sent to broker 4 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-02-05 12:30:05,104] DEBUG The stop replica request (delete = false) sent to broker 4 is [Topic=test.venkata,Partition=2,Replica=4] (kafka.controller.ControllerBrokerRequestBatch)
[2019-02-05 12:30:05,104] INFO [ReplicaStateMachine controllerId=5] Invoking state change to OfflineReplica for replicas [Topic=test.venkata,Partition=2,Replica=4] (kafka.controller.ReplicaStateMachine)
[2019-02-05 12:30:05,104] DEBUG [Controller id=5] Removing replica 4 from ISR 5,4 for partition test.venkata-2. (kafka.controller.KafkaController)
[2019-02-05 12:30:05,107] INFO [Controller id=5] New leader and ISR for partition test.venkata-2 is {"leader":5,"leader_epoch":6,"isr":[5]} (kafka.controller.KafkaController)
[2019-02-05 12:30:05,107] WARN [Channel manager on controller 5]: Not sending request (type=LeaderAndIsRequest, controllerId=5, controllerEpoch=13, partitionStates={test.venkata-2=PartitionState(controllerEpoch=13, leader=5, leaderEpoch=6, isr=5, zkVersion=10, replicas=5,0,4, isNew=false)}, liveLeaders=(localhost:9095 (id: 5 rack: null))) to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2019-02-05 12:30:05,108] DEBUG The stop replica request (delete = true) sent to broker 4 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-02-05 12:30:05,108] DEBUG The stop replica request (delete = false) sent to broker 4 is [Topic=test.venkata,Partition=2,Replica=4] (kafka.controller.ControllerBrokerRequestBatch)
[2019-02-05 12:30:05,110] TRACE [Controller id=5] All leaders = test.venkataclear-0 -> (Leader:5,ISR:5,LeaderEpoch:0,ControllerEpoch:12),__consumer_offsets-19 -> (Leader:-1,ISR:0,LeaderEpoch:10,ControllerEpoch:12),test.venkata-0 -> (Leader:5,ISR:5,LeaderEpoch:5,ControllerEpoch:13),__consumer_offsets-30 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-47 -> (Leader:3,ISR:3,LeaderEpoch:8,ControllerEpoch:5),__consumer_offsets-29 -> (Leader:3,ISR:3,LeaderEpoch:8,ControllerEpoch:5),__consumer_offsets-41 -> (Leader:3,ISR:3,LeaderEpoch:8,ControllerEpoch:5),__consumer_offsets-39 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-10 -> (Leader:-1,ISR:0,LeaderEpoch:10,ControllerEpoch:12),__consumer_offsets-17 -> (Leader:3,ISR:3,LeaderEpoch:8,ControllerEpoch:5),create.employee-2 -> (Leader:4,ISR:4,LeaderEpoch:15,ControllerEpoch:13),__consumer_offsets-14 -> (Leader:3,ISR:3,LeaderEpoch:8,ControllerEpoch:5),__consumer_offsets-40 -> (Leader:-1,ISR:0,LeaderEpoch:10,ControllerEpoch:12),testtopic-0 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-18 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-26 -> (Leader:3,ISR:3,LeaderEpoch:8,ControllerEpoch:5),__consumer_offsets-0 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-24 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-33 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-20 -> (Leader:3,ISR:3,LeaderEpoch:8,ControllerEpoch:5),test.vankata-0 -> (Leader:-1,ISR:0,LeaderEpoch:3,ControllerEpoch:12),__consumer_offsets-3 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-21 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-22 -> (Leader:-1,ISR:0,LeaderEpoch:10,ControllerEpoch:12),__consumer_offsets-5 -> (Leader:3,ISR:3,LeaderEpoch:8,ControllerEpoch:5),test.venkata-1 -> (Leader:5,ISR:5,LeaderEpoch:5,ControllerEpoch:13),__consumer_offsets-12 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-8 -> (Leader:3,ISR:3,LeaderEpoch:8,ControllerEpoch:5),__consumer_offsets-23 -> (Leader:3,ISR:3,LeaderEpoch:8,ControllerEpoch:5),__consumer_offsets-15 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-11 -> (Leader:3,ISR:3,LeaderEpoch:8,ControllerEpoch:5),__consumer_offsets-48 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-13 -> (Leader:-1,ISR:0,LeaderEpoch:10,ControllerEpoch:12),__consumer_offsets-49 -> (Leader:-1,ISR:0,LeaderEpoch:10,ControllerEpoch:12),__consumer_offsets-6 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-28 -> (Leader:-1,ISR:0,LeaderEpoch:10,ControllerEpoch:12),__consumer_offsets-4 -> (Leader:-1,ISR:0,LeaderEpoch:10,ControllerEpoch:12),__consumer_offsets-37 -> (Leader:-1,ISR:0,LeaderEpoch:10,ControllerEpoch:12),__consumer_offsets-31 -> (Leader:-1,ISR:0,LeaderEpoch:10,ControllerEpoch:12),__consumer_offsets-44 -> (Leader:3,ISR:3,LeaderEpoch:8,ControllerEpoch:5),__consumer_offsets-42 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-34 -> (Leader:-1,ISR:0,LeaderEpoch:10,ControllerEpoch:12),__consumer_offsets-46 -> (Leader:-1,ISR:0,LeaderEpoch:10,ControllerEpoch:12),test.venkata-2 -> (Leader:5,ISR:5,LeaderEpoch:6,ControllerEpoch:13),__consumer_offsets-25 -> (Leader:-1,ISR:0,LeaderEpoch:10,ControllerEpoch:12),__consumer_offsets-45 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-27 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-32 -> (Leader:3,ISR:3,LeaderEpoch:8,ControllerEpoch:5),__consumer_offsets-43 -> (Leader:-1,ISR:0,LeaderEpoch:10,ControllerEpoch:12),create.employee-0 -> (Leader:4,ISR:4,LeaderEpoch:15,ControllerEpoch:13),__consumer_offsets-36 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-35 -> (Leader:3,ISR:3,LeaderEpoch:8,ControllerEpoch:5),__consumer_offsets-7 -> (Leader:-1,ISR:0,LeaderEpoch:10,ControllerEpoch:12),__consumer_offsets-9 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-38 -> (Leader:3,ISR:3,LeaderEpoch:8,ControllerEpoch:5),__consumer_offsets-1 -> (Leader:-1,ISR:0,LeaderEpoch:10,ControllerEpoch:12),create.assignment-0 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),create.employee-1 -> (Leader:4,ISR:4,LeaderEpoch:16,ControllerEpoch:13),__consumer_offsets-16 -> (Leader:-1,ISR:0,LeaderEpoch:10,ControllerEpoch:12),__consumer_offsets-2 -> (Leader:3,ISR:3,LeaderEpoch:8,ControllerEpoch:5) (kafka.controller.KafkaController)
[2019-02-05 12:30:05,111] INFO [Controller id=5] Shutting down broker 5 (kafka.controller.KafkaController)
[2019-02-05 12:30:05,111] DEBUG [Controller id=5] All shutting down brokers: 5,4 (kafka.controller.KafkaController)
[2019-02-05 12:30:05,111] DEBUG [Controller id=5] Live brokers:  (kafka.controller.KafkaController)
[2019-02-05 12:30:05,112] INFO [PartitionStateMachine controllerId=5] Invoking state change to OnlinePartition for partitions test.venkata-0 (kafka.controller.PartitionStateMachine)
[2019-02-05 12:30:05,114] INFO [PartitionStateMachine controllerId=5] Invoking state change to OnlinePartition for partitions test.venkata-1 (kafka.controller.PartitionStateMachine)
[2019-02-05 12:30:05,116] INFO [PartitionStateMachine controllerId=5] Invoking state change to OnlinePartition for partitions test.venkata-2 (kafka.controller.PartitionStateMachine)
[2019-02-05 12:30:05,118] TRACE [Controller id=5] All leaders = test.venkataclear-0 -> (Leader:5,ISR:5,LeaderEpoch:0,ControllerEpoch:12),__consumer_offsets-19 -> (Leader:-1,ISR:0,LeaderEpoch:10,ControllerEpoch:12),test.venkata-0 -> (Leader:5,ISR:5,LeaderEpoch:5,ControllerEpoch:13),__consumer_offsets-30 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-47 -> (Leader:3,ISR:3,LeaderEpoch:8,ControllerEpoch:5),__consumer_offsets-29 -> (Leader:3,ISR:3,LeaderEpoch:8,ControllerEpoch:5),__consumer_offsets-41 -> (Leader:3,ISR:3,LeaderEpoch:8,ControllerEpoch:5),__consumer_offsets-39 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-10 -> (Leader:-1,ISR:0,LeaderEpoch:10,ControllerEpoch:12),__consumer_offsets-17 -> (Leader:3,ISR:3,LeaderEpoch:8,ControllerEpoch:5),create.employee-2 -> (Leader:4,ISR:4,LeaderEpoch:15,ControllerEpoch:13),__consumer_offsets-14 -> (Leader:3,ISR:3,LeaderEpoch:8,ControllerEpoch:5),__consumer_offsets-40 -> (Leader:-1,ISR:0,LeaderEpoch:10,ControllerEpoch:12),testtopic-0 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-18 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-26 -> (Leader:3,ISR:3,LeaderEpoch:8,ControllerEpoch:5),__consumer_offsets-0 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-24 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-33 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-20 -> (Leader:3,ISR:3,LeaderEpoch:8,ControllerEpoch:5),test.vankata-0 -> (Leader:-1,ISR:0,LeaderEpoch:3,ControllerEpoch:12),__consumer_offsets-3 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-21 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-22 -> (Leader:-1,ISR:0,LeaderEpoch:10,ControllerEpoch:12),__consumer_offsets-5 -> (Leader:3,ISR:3,LeaderEpoch:8,ControllerEpoch:5),test.venkata-1 -> (Leader:5,ISR:5,LeaderEpoch:5,ControllerEpoch:13),__consumer_offsets-12 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-8 -> (Leader:3,ISR:3,LeaderEpoch:8,ControllerEpoch:5),__consumer_offsets-23 -> (Leader:3,ISR:3,LeaderEpoch:8,ControllerEpoch:5),__consumer_offsets-15 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-11 -> (Leader:3,ISR:3,LeaderEpoch:8,ControllerEpoch:5),__consumer_offsets-48 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-13 -> (Leader:-1,ISR:0,LeaderEpoch:10,ControllerEpoch:12),__consumer_offsets-49 -> (Leader:-1,ISR:0,LeaderEpoch:10,ControllerEpoch:12),__consumer_offsets-6 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-28 -> (Leader:-1,ISR:0,LeaderEpoch:10,ControllerEpoch:12),__consumer_offsets-4 -> (Leader:-1,ISR:0,LeaderEpoch:10,ControllerEpoch:12),__consumer_offsets-37 -> (Leader:-1,ISR:0,LeaderEpoch:10,ControllerEpoch:12),__consumer_offsets-31 -> (Leader:-1,ISR:0,LeaderEpoch:10,ControllerEpoch:12),__consumer_offsets-44 -> (Leader:3,ISR:3,LeaderEpoch:8,ControllerEpoch:5),__consumer_offsets-42 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-34 -> (Leader:-1,ISR:0,LeaderEpoch:10,ControllerEpoch:12),__consumer_offsets-46 -> (Leader:-1,ISR:0,LeaderEpoch:10,ControllerEpoch:12),test.venkata-2 -> (Leader:5,ISR:5,LeaderEpoch:6,ControllerEpoch:13),__consumer_offsets-25 -> (Leader:-1,ISR:0,LeaderEpoch:10,ControllerEpoch:12),__consumer_offsets-45 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-27 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-32 -> (Leader:3,ISR:3,LeaderEpoch:8,ControllerEpoch:5),__consumer_offsets-43 -> (Leader:-1,ISR:0,LeaderEpoch:10,ControllerEpoch:12),create.employee-0 -> (Leader:4,ISR:4,LeaderEpoch:15,ControllerEpoch:13),__consumer_offsets-36 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-35 -> (Leader:3,ISR:3,LeaderEpoch:8,ControllerEpoch:5),__consumer_offsets-7 -> (Leader:-1,ISR:0,LeaderEpoch:10,ControllerEpoch:12),__consumer_offsets-9 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-38 -> (Leader:3,ISR:3,LeaderEpoch:8,ControllerEpoch:5),__consumer_offsets-1 -> (Leader:-1,ISR:0,LeaderEpoch:10,ControllerEpoch:12),create.assignment-0 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),create.employee-1 -> (Leader:4,ISR:4,LeaderEpoch:16,ControllerEpoch:13),__consumer_offsets-16 -> (Leader:-1,ISR:0,LeaderEpoch:10,ControllerEpoch:12),__consumer_offsets-2 -> (Leader:3,ISR:3,LeaderEpoch:8,ControllerEpoch:5) (kafka.controller.KafkaController)
[2019-02-05 12:30:10,118] INFO [Controller id=5] Shutting down broker 4 (kafka.controller.KafkaController)
[2019-02-05 12:30:10,118] DEBUG [Controller id=5] All shutting down brokers: 5,4 (kafka.controller.KafkaController)
[2019-02-05 12:30:10,118] DEBUG [Controller id=5] Live brokers:  (kafka.controller.KafkaController)
[2019-02-05 12:30:10,119] INFO [PartitionStateMachine controllerId=5] Invoking state change to OnlinePartition for partitions create.employee-0 (kafka.controller.PartitionStateMachine)
[2019-02-05 12:30:10,120] DEBUG The stop replica request (delete = true) sent to broker 4 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-02-05 12:30:10,121] DEBUG The stop replica request (delete = false) sent to broker 4 is [Topic=test.venkata,Partition=0,Replica=4] (kafka.controller.ControllerBrokerRequestBatch)
[2019-02-05 12:30:10,121] INFO [ReplicaStateMachine controllerId=5] Invoking state change to OfflineReplica for replicas [Topic=test.venkata,Partition=0,Replica=4] (kafka.controller.ReplicaStateMachine)
[2019-02-05 12:30:10,121] DEBUG [Controller id=5] Removing replica 4 from ISR 5 for partition test.venkata-0. (kafka.controller.KafkaController)
[2019-02-05 12:30:10,122] WARN [Controller id=5] Cannot remove replica 4 from ISR of partition test.venkata-0 since it is not in the ISR. Leader = 5 ; ISR = List(5) (kafka.controller.KafkaController)
[2019-02-05 12:30:10,123] WARN [Channel manager on controller 5]: Not sending request (type=LeaderAndIsRequest, controllerId=5, controllerEpoch=13, partitionStates={test.venkata-0=PartitionState(controllerEpoch=13, leader=5, leaderEpoch=5, isr=5, zkVersion=8, replicas=0,4,5, isNew=false)}, liveLeaders=(localhost:9095 (id: 5 rack: null))) to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2019-02-05 12:30:10,123] DEBUG The stop replica request (delete = true) sent to broker 4 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-02-05 12:30:10,123] DEBUG The stop replica request (delete = false) sent to broker 4 is [Topic=test.venkata,Partition=0,Replica=4] (kafka.controller.ControllerBrokerRequestBatch)
[2019-02-05 12:30:10,124] INFO [PartitionStateMachine controllerId=5] Invoking state change to OnlinePartition for partitions create.employee-1 (kafka.controller.PartitionStateMachine)
[2019-02-05 12:30:10,126] DEBUG The stop replica request (delete = true) sent to broker 4 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-02-05 12:30:10,126] DEBUG The stop replica request (delete = false) sent to broker 4 is [Topic=test.venkata,Partition=1,Replica=4] (kafka.controller.ControllerBrokerRequestBatch)
[2019-02-05 12:30:10,126] INFO [ReplicaStateMachine controllerId=5] Invoking state change to OfflineReplica for replicas [Topic=test.venkata,Partition=1,Replica=4] (kafka.controller.ReplicaStateMachine)
[2019-02-05 12:30:10,126] DEBUG [Controller id=5] Removing replica 4 from ISR 5 for partition test.venkata-1. (kafka.controller.KafkaController)
[2019-02-05 12:30:10,127] WARN [Controller id=5] Cannot remove replica 4 from ISR of partition test.venkata-1 since it is not in the ISR. Leader = 5 ; ISR = List(5) (kafka.controller.KafkaController)
[2019-02-05 12:30:10,128] WARN [Channel manager on controller 5]: Not sending request (type=LeaderAndIsRequest, controllerId=5, controllerEpoch=13, partitionStates={test.venkata-1=PartitionState(controllerEpoch=13, leader=5, leaderEpoch=5, isr=5, zkVersion=8, replicas=4,5,0, isNew=false)}, liveLeaders=(localhost:9095 (id: 5 rack: null))) to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2019-02-05 12:30:10,128] DEBUG The stop replica request (delete = true) sent to broker 4 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-02-05 12:30:10,128] DEBUG The stop replica request (delete = false) sent to broker 4 is [Topic=test.venkata,Partition=1,Replica=4] (kafka.controller.ControllerBrokerRequestBatch)
[2019-02-05 12:30:10,128] INFO [PartitionStateMachine controllerId=5] Invoking state change to OnlinePartition for partitions create.employee-2 (kafka.controller.PartitionStateMachine)
[2019-02-05 12:30:10,130] DEBUG The stop replica request (delete = true) sent to broker 4 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-02-05 12:30:10,130] DEBUG The stop replica request (delete = false) sent to broker 4 is [Topic=test.venkata,Partition=2,Replica=4] (kafka.controller.ControllerBrokerRequestBatch)
[2019-02-05 12:30:10,130] INFO [ReplicaStateMachine controllerId=5] Invoking state change to OfflineReplica for replicas [Topic=test.venkata,Partition=2,Replica=4] (kafka.controller.ReplicaStateMachine)
[2019-02-05 12:30:10,130] DEBUG [Controller id=5] Removing replica 4 from ISR 5 for partition test.venkata-2. (kafka.controller.KafkaController)
[2019-02-05 12:30:10,131] WARN [Controller id=5] Cannot remove replica 4 from ISR of partition test.venkata-2 since it is not in the ISR. Leader = 5 ; ISR = List(5) (kafka.controller.KafkaController)
[2019-02-05 12:30:10,132] WARN [Channel manager on controller 5]: Not sending request (type=LeaderAndIsRequest, controllerId=5, controllerEpoch=13, partitionStates={test.venkata-2=PartitionState(controllerEpoch=13, leader=5, leaderEpoch=6, isr=5, zkVersion=10, replicas=5,0,4, isNew=false)}, liveLeaders=(localhost:9095 (id: 5 rack: null))) to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2019-02-05 12:30:10,132] DEBUG The stop replica request (delete = true) sent to broker 4 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-02-05 12:30:10,132] DEBUG The stop replica request (delete = false) sent to broker 4 is [Topic=test.venkata,Partition=2,Replica=4] (kafka.controller.ControllerBrokerRequestBatch)
[2019-02-05 12:30:10,132] TRACE [Controller id=5] All leaders = test.venkataclear-0 -> (Leader:5,ISR:5,LeaderEpoch:0,ControllerEpoch:12),__consumer_offsets-19 -> (Leader:-1,ISR:0,LeaderEpoch:10,ControllerEpoch:12),test.venkata-0 -> (Leader:5,ISR:5,LeaderEpoch:5,ControllerEpoch:13),__consumer_offsets-30 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-47 -> (Leader:3,ISR:3,LeaderEpoch:8,ControllerEpoch:5),__consumer_offsets-29 -> (Leader:3,ISR:3,LeaderEpoch:8,ControllerEpoch:5),__consumer_offsets-41 -> (Leader:3,ISR:3,LeaderEpoch:8,ControllerEpoch:5),__consumer_offsets-39 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-10 -> (Leader:-1,ISR:0,LeaderEpoch:10,ControllerEpoch:12),__consumer_offsets-17 -> (Leader:3,ISR:3,LeaderEpoch:8,ControllerEpoch:5),create.employee-2 -> (Leader:4,ISR:4,LeaderEpoch:15,ControllerEpoch:13),__consumer_offsets-14 -> (Leader:3,ISR:3,LeaderEpoch:8,ControllerEpoch:5),__consumer_offsets-40 -> (Leader:-1,ISR:0,LeaderEpoch:10,ControllerEpoch:12),testtopic-0 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-18 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-26 -> (Leader:3,ISR:3,LeaderEpoch:8,ControllerEpoch:5),__consumer_offsets-0 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-24 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-33 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-20 -> (Leader:3,ISR:3,LeaderEpoch:8,ControllerEpoch:5),test.vankata-0 -> (Leader:-1,ISR:0,LeaderEpoch:3,ControllerEpoch:12),__consumer_offsets-3 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-21 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-22 -> (Leader:-1,ISR:0,LeaderEpoch:10,ControllerEpoch:12),__consumer_offsets-5 -> (Leader:3,ISR:3,LeaderEpoch:8,ControllerEpoch:5),test.venkata-1 -> (Leader:5,ISR:5,LeaderEpoch:5,ControllerEpoch:13),__consumer_offsets-12 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-8 -> (Leader:3,ISR:3,LeaderEpoch:8,ControllerEpoch:5),__consumer_offsets-23 -> (Leader:3,ISR:3,LeaderEpoch:8,ControllerEpoch:5),__consumer_offsets-15 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-11 -> (Leader:3,ISR:3,LeaderEpoch:8,ControllerEpoch:5),__consumer_offsets-48 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-13 -> (Leader:-1,ISR:0,LeaderEpoch:10,ControllerEpoch:12),__consumer_offsets-49 -> (Leader:-1,ISR:0,LeaderEpoch:10,ControllerEpoch:12),__consumer_offsets-6 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-28 -> (Leader:-1,ISR:0,LeaderEpoch:10,ControllerEpoch:12),__consumer_offsets-4 -> (Leader:-1,ISR:0,LeaderEpoch:10,ControllerEpoch:12),__consumer_offsets-37 -> (Leader:-1,ISR:0,LeaderEpoch:10,ControllerEpoch:12),__consumer_offsets-31 -> (Leader:-1,ISR:0,LeaderEpoch:10,ControllerEpoch:12),__consumer_offsets-44 -> (Leader:3,ISR:3,LeaderEpoch:8,ControllerEpoch:5),__consumer_offsets-42 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-34 -> (Leader:-1,ISR:0,LeaderEpoch:10,ControllerEpoch:12),__consumer_offsets-46 -> (Leader:-1,ISR:0,LeaderEpoch:10,ControllerEpoch:12),test.venkata-2 -> (Leader:5,ISR:5,LeaderEpoch:6,ControllerEpoch:13),__consumer_offsets-25 -> (Leader:-1,ISR:0,LeaderEpoch:10,ControllerEpoch:12),__consumer_offsets-45 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-27 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-32 -> (Leader:3,ISR:3,LeaderEpoch:8,ControllerEpoch:5),__consumer_offsets-43 -> (Leader:-1,ISR:0,LeaderEpoch:10,ControllerEpoch:12),create.employee-0 -> (Leader:4,ISR:4,LeaderEpoch:15,ControllerEpoch:13),__consumer_offsets-36 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-35 -> (Leader:3,ISR:3,LeaderEpoch:8,ControllerEpoch:5),__consumer_offsets-7 -> (Leader:-1,ISR:0,LeaderEpoch:10,ControllerEpoch:12),__consumer_offsets-9 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-38 -> (Leader:3,ISR:3,LeaderEpoch:8,ControllerEpoch:5),__consumer_offsets-1 -> (Leader:-1,ISR:0,LeaderEpoch:10,ControllerEpoch:12),create.assignment-0 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),create.employee-1 -> (Leader:4,ISR:4,LeaderEpoch:16,ControllerEpoch:13),__consumer_offsets-16 -> (Leader:-1,ISR:0,LeaderEpoch:10,ControllerEpoch:12),__consumer_offsets-2 -> (Leader:3,ISR:3,LeaderEpoch:8,ControllerEpoch:5) (kafka.controller.KafkaController)
[2019-02-05 12:30:10,133] INFO [Controller id=5] Shutting down broker 5 (kafka.controller.KafkaController)
[2019-02-05 12:30:10,133] DEBUG [Controller id=5] All shutting down brokers: 5,4 (kafka.controller.KafkaController)
[2019-02-05 12:30:10,133] DEBUG [Controller id=5] Live brokers:  (kafka.controller.KafkaController)
[2019-02-05 12:30:10,134] INFO [PartitionStateMachine controllerId=5] Invoking state change to OnlinePartition for partitions test.venkata-0 (kafka.controller.PartitionStateMachine)
[2019-02-05 12:30:10,136] INFO [PartitionStateMachine controllerId=5] Invoking state change to OnlinePartition for partitions test.venkata-1 (kafka.controller.PartitionStateMachine)
[2019-02-05 12:30:10,137] INFO [PartitionStateMachine controllerId=5] Invoking state change to OnlinePartition for partitions test.venkata-2 (kafka.controller.PartitionStateMachine)
[2019-02-05 12:30:10,139] TRACE [Controller id=5] All leaders = test.venkataclear-0 -> (Leader:5,ISR:5,LeaderEpoch:0,ControllerEpoch:12),__consumer_offsets-19 -> (Leader:-1,ISR:0,LeaderEpoch:10,ControllerEpoch:12),test.venkata-0 -> (Leader:5,ISR:5,LeaderEpoch:5,ControllerEpoch:13),__consumer_offsets-30 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-47 -> (Leader:3,ISR:3,LeaderEpoch:8,ControllerEpoch:5),__consumer_offsets-29 -> (Leader:3,ISR:3,LeaderEpoch:8,ControllerEpoch:5),__consumer_offsets-41 -> (Leader:3,ISR:3,LeaderEpoch:8,ControllerEpoch:5),__consumer_offsets-39 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-10 -> (Leader:-1,ISR:0,LeaderEpoch:10,ControllerEpoch:12),__consumer_offsets-17 -> (Leader:3,ISR:3,LeaderEpoch:8,ControllerEpoch:5),create.employee-2 -> (Leader:4,ISR:4,LeaderEpoch:15,ControllerEpoch:13),__consumer_offsets-14 -> (Leader:3,ISR:3,LeaderEpoch:8,ControllerEpoch:5),__consumer_offsets-40 -> (Leader:-1,ISR:0,LeaderEpoch:10,ControllerEpoch:12),testtopic-0 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-18 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-26 -> (Leader:3,ISR:3,LeaderEpoch:8,ControllerEpoch:5),__consumer_offsets-0 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-24 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-33 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-20 -> (Leader:3,ISR:3,LeaderEpoch:8,ControllerEpoch:5),test.vankata-0 -> (Leader:-1,ISR:0,LeaderEpoch:3,ControllerEpoch:12),__consumer_offsets-3 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-21 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-22 -> (Leader:-1,ISR:0,LeaderEpoch:10,ControllerEpoch:12),__consumer_offsets-5 -> (Leader:3,ISR:3,LeaderEpoch:8,ControllerEpoch:5),test.venkata-1 -> (Leader:5,ISR:5,LeaderEpoch:5,ControllerEpoch:13),__consumer_offsets-12 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-8 -> (Leader:3,ISR:3,LeaderEpoch:8,ControllerEpoch:5),__consumer_offsets-23 -> (Leader:3,ISR:3,LeaderEpoch:8,ControllerEpoch:5),__consumer_offsets-15 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-11 -> (Leader:3,ISR:3,LeaderEpoch:8,ControllerEpoch:5),__consumer_offsets-48 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-13 -> (Leader:-1,ISR:0,LeaderEpoch:10,ControllerEpoch:12),__consumer_offsets-49 -> (Leader:-1,ISR:0,LeaderEpoch:10,ControllerEpoch:12),__consumer_offsets-6 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-28 -> (Leader:-1,ISR:0,LeaderEpoch:10,ControllerEpoch:12),__consumer_offsets-4 -> (Leader:-1,ISR:0,LeaderEpoch:10,ControllerEpoch:12),__consumer_offsets-37 -> (Leader:-1,ISR:0,LeaderEpoch:10,ControllerEpoch:12),__consumer_offsets-31 -> (Leader:-1,ISR:0,LeaderEpoch:10,ControllerEpoch:12),__consumer_offsets-44 -> (Leader:3,ISR:3,LeaderEpoch:8,ControllerEpoch:5),__consumer_offsets-42 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-34 -> (Leader:-1,ISR:0,LeaderEpoch:10,ControllerEpoch:12),__consumer_offsets-46 -> (Leader:-1,ISR:0,LeaderEpoch:10,ControllerEpoch:12),test.venkata-2 -> (Leader:5,ISR:5,LeaderEpoch:6,ControllerEpoch:13),__consumer_offsets-25 -> (Leader:-1,ISR:0,LeaderEpoch:10,ControllerEpoch:12),__consumer_offsets-45 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-27 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-32 -> (Leader:3,ISR:3,LeaderEpoch:8,ControllerEpoch:5),__consumer_offsets-43 -> (Leader:-1,ISR:0,LeaderEpoch:10,ControllerEpoch:12),create.employee-0 -> (Leader:4,ISR:4,LeaderEpoch:15,ControllerEpoch:13),__consumer_offsets-36 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-35 -> (Leader:3,ISR:3,LeaderEpoch:8,ControllerEpoch:5),__consumer_offsets-7 -> (Leader:-1,ISR:0,LeaderEpoch:10,ControllerEpoch:12),__consumer_offsets-9 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-38 -> (Leader:3,ISR:3,LeaderEpoch:8,ControllerEpoch:5),__consumer_offsets-1 -> (Leader:-1,ISR:0,LeaderEpoch:10,ControllerEpoch:12),create.assignment-0 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),create.employee-1 -> (Leader:4,ISR:4,LeaderEpoch:16,ControllerEpoch:13),__consumer_offsets-16 -> (Leader:-1,ISR:0,LeaderEpoch:10,ControllerEpoch:12),__consumer_offsets-2 -> (Leader:3,ISR:3,LeaderEpoch:8,ControllerEpoch:5) (kafka.controller.KafkaController)
[2019-02-05 12:30:15,138] INFO [Controller id=5] Shutting down broker 4 (kafka.controller.KafkaController)
[2019-02-05 12:30:15,139] DEBUG [Controller id=5] All shutting down brokers: 5,4 (kafka.controller.KafkaController)
[2019-02-05 12:30:15,139] DEBUG [Controller id=5] Live brokers:  (kafka.controller.KafkaController)
[2019-02-05 12:30:15,139] INFO [PartitionStateMachine controllerId=5] Invoking state change to OnlinePartition for partitions create.employee-0 (kafka.controller.PartitionStateMachine)
[2019-02-05 12:30:15,141] DEBUG The stop replica request (delete = true) sent to broker 4 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-02-05 12:30:15,141] DEBUG The stop replica request (delete = false) sent to broker 4 is [Topic=test.venkata,Partition=0,Replica=4] (kafka.controller.ControllerBrokerRequestBatch)
[2019-02-05 12:30:15,141] INFO [ReplicaStateMachine controllerId=5] Invoking state change to OfflineReplica for replicas [Topic=test.venkata,Partition=0,Replica=4] (kafka.controller.ReplicaStateMachine)
[2019-02-05 12:30:15,141] DEBUG [Controller id=5] Removing replica 4 from ISR 5 for partition test.venkata-0. (kafka.controller.KafkaController)
[2019-02-05 12:30:15,142] WARN [Controller id=5] Cannot remove replica 4 from ISR of partition test.venkata-0 since it is not in the ISR. Leader = 5 ; ISR = List(5) (kafka.controller.KafkaController)
[2019-02-05 12:30:15,142] WARN [Channel manager on controller 5]: Not sending request (type=LeaderAndIsRequest, controllerId=5, controllerEpoch=13, partitionStates={test.venkata-0=PartitionState(controllerEpoch=13, leader=5, leaderEpoch=5, isr=5, zkVersion=8, replicas=0,4,5, isNew=false)}, liveLeaders=(localhost:9095 (id: 5 rack: null))) to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2019-02-05 12:30:15,143] DEBUG The stop replica request (delete = true) sent to broker 4 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-02-05 12:30:15,143] DEBUG The stop replica request (delete = false) sent to broker 4 is [Topic=test.venkata,Partition=0,Replica=4] (kafka.controller.ControllerBrokerRequestBatch)
[2019-02-05 12:30:15,143] INFO [PartitionStateMachine controllerId=5] Invoking state change to OnlinePartition for partitions create.employee-1 (kafka.controller.PartitionStateMachine)
[2019-02-05 12:30:15,145] DEBUG The stop replica request (delete = true) sent to broker 4 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-02-05 12:30:15,145] DEBUG The stop replica request (delete = false) sent to broker 4 is [Topic=test.venkata,Partition=1,Replica=4] (kafka.controller.ControllerBrokerRequestBatch)
[2019-02-05 12:30:15,146] INFO [ReplicaStateMachine controllerId=5] Invoking state change to OfflineReplica for replicas [Topic=test.venkata,Partition=1,Replica=4] (kafka.controller.ReplicaStateMachine)
[2019-02-05 12:30:15,146] DEBUG [Controller id=5] Removing replica 4 from ISR 5 for partition test.venkata-1. (kafka.controller.KafkaController)
[2019-02-05 12:30:15,147] WARN [Controller id=5] Cannot remove replica 4 from ISR of partition test.venkata-1 since it is not in the ISR. Leader = 5 ; ISR = List(5) (kafka.controller.KafkaController)
[2019-02-05 12:30:15,148] WARN [Channel manager on controller 5]: Not sending request (type=LeaderAndIsRequest, controllerId=5, controllerEpoch=13, partitionStates={test.venkata-1=PartitionState(controllerEpoch=13, leader=5, leaderEpoch=5, isr=5, zkVersion=8, replicas=4,5,0, isNew=false)}, liveLeaders=(localhost:9095 (id: 5 rack: null))) to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2019-02-05 12:30:15,148] DEBUG The stop replica request (delete = true) sent to broker 4 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-02-05 12:30:15,148] DEBUG The stop replica request (delete = false) sent to broker 4 is [Topic=test.venkata,Partition=1,Replica=4] (kafka.controller.ControllerBrokerRequestBatch)
[2019-02-05 12:30:15,148] INFO [PartitionStateMachine controllerId=5] Invoking state change to OnlinePartition for partitions create.employee-2 (kafka.controller.PartitionStateMachine)
[2019-02-05 12:30:15,150] DEBUG The stop replica request (delete = true) sent to broker 4 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-02-05 12:30:15,150] DEBUG The stop replica request (delete = false) sent to broker 4 is [Topic=test.venkata,Partition=2,Replica=4] (kafka.controller.ControllerBrokerRequestBatch)
[2019-02-05 12:30:15,150] INFO [ReplicaStateMachine controllerId=5] Invoking state change to OfflineReplica for replicas [Topic=test.venkata,Partition=2,Replica=4] (kafka.controller.ReplicaStateMachine)
[2019-02-05 12:30:15,151] DEBUG [Controller id=5] Removing replica 4 from ISR 5 for partition test.venkata-2. (kafka.controller.KafkaController)
[2019-02-05 12:30:15,151] WARN [Controller id=5] Cannot remove replica 4 from ISR of partition test.venkata-2 since it is not in the ISR. Leader = 5 ; ISR = List(5) (kafka.controller.KafkaController)
[2019-02-05 12:30:15,152] WARN [Channel manager on controller 5]: Not sending request (type=LeaderAndIsRequest, controllerId=5, controllerEpoch=13, partitionStates={test.venkata-2=PartitionState(controllerEpoch=13, leader=5, leaderEpoch=6, isr=5, zkVersion=10, replicas=5,0,4, isNew=false)}, liveLeaders=(localhost:9095 (id: 5 rack: null))) to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2019-02-05 12:30:15,152] DEBUG The stop replica request (delete = true) sent to broker 4 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-02-05 12:30:15,152] DEBUG The stop replica request (delete = false) sent to broker 4 is [Topic=test.venkata,Partition=2,Replica=4] (kafka.controller.ControllerBrokerRequestBatch)
[2019-02-05 12:30:15,153] TRACE [Controller id=5] All leaders = test.venkataclear-0 -> (Leader:5,ISR:5,LeaderEpoch:0,ControllerEpoch:12),__consumer_offsets-19 -> (Leader:-1,ISR:0,LeaderEpoch:10,ControllerEpoch:12),test.venkata-0 -> (Leader:5,ISR:5,LeaderEpoch:5,ControllerEpoch:13),__consumer_offsets-30 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-47 -> (Leader:3,ISR:3,LeaderEpoch:8,ControllerEpoch:5),__consumer_offsets-29 -> (Leader:3,ISR:3,LeaderEpoch:8,ControllerEpoch:5),__consumer_offsets-41 -> (Leader:3,ISR:3,LeaderEpoch:8,ControllerEpoch:5),__consumer_offsets-39 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-10 -> (Leader:-1,ISR:0,LeaderEpoch:10,ControllerEpoch:12),__consumer_offsets-17 -> (Leader:3,ISR:3,LeaderEpoch:8,ControllerEpoch:5),create.employee-2 -> (Leader:4,ISR:4,LeaderEpoch:15,ControllerEpoch:13),__consumer_offsets-14 -> (Leader:3,ISR:3,LeaderEpoch:8,ControllerEpoch:5),__consumer_offsets-40 -> (Leader:-1,ISR:0,LeaderEpoch:10,ControllerEpoch:12),testtopic-0 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-18 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-26 -> (Leader:3,ISR:3,LeaderEpoch:8,ControllerEpoch:5),__consumer_offsets-0 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-24 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-33 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-20 -> (Leader:3,ISR:3,LeaderEpoch:8,ControllerEpoch:5),test.vankata-0 -> (Leader:-1,ISR:0,LeaderEpoch:3,ControllerEpoch:12),__consumer_offsets-3 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-21 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-22 -> (Leader:-1,ISR:0,LeaderEpoch:10,ControllerEpoch:12),__consumer_offsets-5 -> (Leader:3,ISR:3,LeaderEpoch:8,ControllerEpoch:5),test.venkata-1 -> (Leader:5,ISR:5,LeaderEpoch:5,ControllerEpoch:13),__consumer_offsets-12 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-8 -> (Leader:3,ISR:3,LeaderEpoch:8,ControllerEpoch:5),__consumer_offsets-23 -> (Leader:3,ISR:3,LeaderEpoch:8,ControllerEpoch:5),__consumer_offsets-15 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-11 -> (Leader:3,ISR:3,LeaderEpoch:8,ControllerEpoch:5),__consumer_offsets-48 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-13 -> (Leader:-1,ISR:0,LeaderEpoch:10,ControllerEpoch:12),__consumer_offsets-49 -> (Leader:-1,ISR:0,LeaderEpoch:10,ControllerEpoch:12),__consumer_offsets-6 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-28 -> (Leader:-1,ISR:0,LeaderEpoch:10,ControllerEpoch:12),__consumer_offsets-4 -> (Leader:-1,ISR:0,LeaderEpoch:10,ControllerEpoch:12),__consumer_offsets-37 -> (Leader:-1,ISR:0,LeaderEpoch:10,ControllerEpoch:12),__consumer_offsets-31 -> (Leader:-1,ISR:0,LeaderEpoch:10,ControllerEpoch:12),__consumer_offsets-44 -> (Leader:3,ISR:3,LeaderEpoch:8,ControllerEpoch:5),__consumer_offsets-42 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-34 -> (Leader:-1,ISR:0,LeaderEpoch:10,ControllerEpoch:12),__consumer_offsets-46 -> (Leader:-1,ISR:0,LeaderEpoch:10,ControllerEpoch:12),test.venkata-2 -> (Leader:5,ISR:5,LeaderEpoch:6,ControllerEpoch:13),__consumer_offsets-25 -> (Leader:-1,ISR:0,LeaderEpoch:10,ControllerEpoch:12),__consumer_offsets-45 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-27 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-32 -> (Leader:3,ISR:3,LeaderEpoch:8,ControllerEpoch:5),__consumer_offsets-43 -> (Leader:-1,ISR:0,LeaderEpoch:10,ControllerEpoch:12),create.employee-0 -> (Leader:4,ISR:4,LeaderEpoch:15,ControllerEpoch:13),__consumer_offsets-36 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-35 -> (Leader:3,ISR:3,LeaderEpoch:8,ControllerEpoch:5),__consumer_offsets-7 -> (Leader:-1,ISR:0,LeaderEpoch:10,ControllerEpoch:12),__consumer_offsets-9 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-38 -> (Leader:3,ISR:3,LeaderEpoch:8,ControllerEpoch:5),__consumer_offsets-1 -> (Leader:-1,ISR:0,LeaderEpoch:10,ControllerEpoch:12),create.assignment-0 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),create.employee-1 -> (Leader:4,ISR:4,LeaderEpoch:16,ControllerEpoch:13),__consumer_offsets-16 -> (Leader:-1,ISR:0,LeaderEpoch:10,ControllerEpoch:12),__consumer_offsets-2 -> (Leader:3,ISR:3,LeaderEpoch:8,ControllerEpoch:5) (kafka.controller.KafkaController)
[2019-02-05 12:30:15,154] INFO [Controller id=5] Shutting down broker 5 (kafka.controller.KafkaController)
[2019-02-05 12:30:15,154] DEBUG [Controller id=5] All shutting down brokers: 5,4 (kafka.controller.KafkaController)
[2019-02-05 12:30:15,154] DEBUG [Controller id=5] Live brokers:  (kafka.controller.KafkaController)
[2019-02-05 12:30:15,154] INFO [PartitionStateMachine controllerId=5] Invoking state change to OnlinePartition for partitions test.venkata-0 (kafka.controller.PartitionStateMachine)
[2019-02-05 12:30:15,155] INFO [PartitionStateMachine controllerId=5] Invoking state change to OnlinePartition for partitions test.venkata-1 (kafka.controller.PartitionStateMachine)
[2019-02-05 12:30:15,157] INFO [PartitionStateMachine controllerId=5] Invoking state change to OnlinePartition for partitions test.venkata-2 (kafka.controller.PartitionStateMachine)
[2019-02-05 12:30:15,158] TRACE [Controller id=5] All leaders = test.venkataclear-0 -> (Leader:5,ISR:5,LeaderEpoch:0,ControllerEpoch:12),__consumer_offsets-19 -> (Leader:-1,ISR:0,LeaderEpoch:10,ControllerEpoch:12),test.venkata-0 -> (Leader:5,ISR:5,LeaderEpoch:5,ControllerEpoch:13),__consumer_offsets-30 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-47 -> (Leader:3,ISR:3,LeaderEpoch:8,ControllerEpoch:5),__consumer_offsets-29 -> (Leader:3,ISR:3,LeaderEpoch:8,ControllerEpoch:5),__consumer_offsets-41 -> (Leader:3,ISR:3,LeaderEpoch:8,ControllerEpoch:5),__consumer_offsets-39 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-10 -> (Leader:-1,ISR:0,LeaderEpoch:10,ControllerEpoch:12),__consumer_offsets-17 -> (Leader:3,ISR:3,LeaderEpoch:8,ControllerEpoch:5),create.employee-2 -> (Leader:4,ISR:4,LeaderEpoch:15,ControllerEpoch:13),__consumer_offsets-14 -> (Leader:3,ISR:3,LeaderEpoch:8,ControllerEpoch:5),__consumer_offsets-40 -> (Leader:-1,ISR:0,LeaderEpoch:10,ControllerEpoch:12),testtopic-0 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-18 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-26 -> (Leader:3,ISR:3,LeaderEpoch:8,ControllerEpoch:5),__consumer_offsets-0 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-24 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-33 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-20 -> (Leader:3,ISR:3,LeaderEpoch:8,ControllerEpoch:5),test.vankata-0 -> (Leader:-1,ISR:0,LeaderEpoch:3,ControllerEpoch:12),__consumer_offsets-3 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-21 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-22 -> (Leader:-1,ISR:0,LeaderEpoch:10,ControllerEpoch:12),__consumer_offsets-5 -> (Leader:3,ISR:3,LeaderEpoch:8,ControllerEpoch:5),test.venkata-1 -> (Leader:5,ISR:5,LeaderEpoch:5,ControllerEpoch:13),__consumer_offsets-12 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-8 -> (Leader:3,ISR:3,LeaderEpoch:8,ControllerEpoch:5),__consumer_offsets-23 -> (Leader:3,ISR:3,LeaderEpoch:8,ControllerEpoch:5),__consumer_offsets-15 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-11 -> (Leader:3,ISR:3,LeaderEpoch:8,ControllerEpoch:5),__consumer_offsets-48 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-13 -> (Leader:-1,ISR:0,LeaderEpoch:10,ControllerEpoch:12),__consumer_offsets-49 -> (Leader:-1,ISR:0,LeaderEpoch:10,ControllerEpoch:12),__consumer_offsets-6 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-28 -> (Leader:-1,ISR:0,LeaderEpoch:10,ControllerEpoch:12),__consumer_offsets-4 -> (Leader:-1,ISR:0,LeaderEpoch:10,ControllerEpoch:12),__consumer_offsets-37 -> (Leader:-1,ISR:0,LeaderEpoch:10,ControllerEpoch:12),__consumer_offsets-31 -> (Leader:-1,ISR:0,LeaderEpoch:10,ControllerEpoch:12),__consumer_offsets-44 -> (Leader:3,ISR:3,LeaderEpoch:8,ControllerEpoch:5),__consumer_offsets-42 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-34 -> (Leader:-1,ISR:0,LeaderEpoch:10,ControllerEpoch:12),__consumer_offsets-46 -> (Leader:-1,ISR:0,LeaderEpoch:10,ControllerEpoch:12),test.venkata-2 -> (Leader:5,ISR:5,LeaderEpoch:6,ControllerEpoch:13),__consumer_offsets-25 -> (Leader:-1,ISR:0,LeaderEpoch:10,ControllerEpoch:12),__consumer_offsets-45 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-27 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-32 -> (Leader:3,ISR:3,LeaderEpoch:8,ControllerEpoch:5),__consumer_offsets-43 -> (Leader:-1,ISR:0,LeaderEpoch:10,ControllerEpoch:12),create.employee-0 -> (Leader:4,ISR:4,LeaderEpoch:15,ControllerEpoch:13),__consumer_offsets-36 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-35 -> (Leader:3,ISR:3,LeaderEpoch:8,ControllerEpoch:5),__consumer_offsets-7 -> (Leader:-1,ISR:0,LeaderEpoch:10,ControllerEpoch:12),__consumer_offsets-9 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),__consumer_offsets-38 -> (Leader:3,ISR:3,LeaderEpoch:8,ControllerEpoch:5),__consumer_offsets-1 -> (Leader:-1,ISR:0,LeaderEpoch:10,ControllerEpoch:12),create.assignment-0 -> (Leader:4,ISR:4,LeaderEpoch:8,ControllerEpoch:13),create.employee-1 -> (Leader:4,ISR:4,LeaderEpoch:16,ControllerEpoch:13),__consumer_offsets-16 -> (Leader:-1,ISR:0,LeaderEpoch:10,ControllerEpoch:12),__consumer_offsets-2 -> (Leader:3,ISR:3,LeaderEpoch:8,ControllerEpoch:5) (kafka.controller.KafkaController)
[2019-02-05 12:30:23,588] INFO [controller-event-thread]: Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2019-02-05 12:30:23,588] INFO [controller-event-thread]: Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2019-02-05 12:30:23,589] INFO [controller-event-thread]: Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2019-02-05 12:30:23,589] DEBUG [Controller id=5] Resigning (kafka.controller.KafkaController)
[2019-02-05 12:30:23,589] DEBUG [Controller id=5] De-registering IsrChangeNotificationListener (kafka.controller.KafkaController)
[2019-02-05 12:30:23,590] DEBUG [Controller id=5] De-registering logDirEventNotificationListener (kafka.controller.KafkaController)
[2019-02-05 12:30:23,591] INFO [PartitionStateMachine controllerId=5] Stopped partition state machine (kafka.controller.PartitionStateMachine)
[2019-02-05 12:30:23,592] INFO [ReplicaStateMachine controllerId=5] Stopped replica state machine (kafka.controller.ReplicaStateMachine)
[2019-02-05 12:30:23,592] INFO [Controller-5-to-broker-5-send-thread]: Shutting down (kafka.controller.RequestSendThread)
[2019-02-05 12:30:23,592] INFO [Controller-5-to-broker-5-send-thread]: Stopped (kafka.controller.RequestSendThread)
[2019-02-05 12:30:23,592] INFO [Controller-5-to-broker-5-send-thread]: Shutdown completed (kafka.controller.RequestSendThread)
[2019-02-05 12:30:23,593] INFO [Controller-5-to-broker-4-send-thread]: Shutting down (kafka.controller.RequestSendThread)
[2019-02-05 12:30:23,593] INFO [Controller-5-to-broker-4-send-thread]: Stopped (kafka.controller.RequestSendThread)
[2019-02-05 12:30:23,593] INFO [Controller-5-to-broker-4-send-thread]: Shutdown completed (kafka.controller.RequestSendThread)
[2019-02-05 12:30:23,594] INFO [Controller id=5] Resigned (kafka.controller.KafkaController)
