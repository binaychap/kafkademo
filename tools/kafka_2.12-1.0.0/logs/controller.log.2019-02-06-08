[2019-02-06 10:02:14,105] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-02-06 10:02:14,113] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-30 -> Vector(2), __consumer_offsets-39 -> Vector(2), __consumer_offsets-18 -> Vector(2), __consumer_offsets-0 -> Vector(2), __consumer_offsets-24 -> Vector(2), __consumer_offsets-33 -> Vector(2), __consumer_offsets-21 -> Vector(2), __consumer_offsets-3 -> Vector(2), __consumer_offsets-12 -> Vector(2), __consumer_offsets-15 -> Vector(2), __consumer_offsets-48 -> Vector(2), __consumer_offsets-6 -> Vector(2), __consumer_offsets-42 -> Vector(2), __consumer_offsets-27 -> Vector(2), __consumer_offsets-45 -> Vector(2), __consumer_offsets-36 -> Vector(2), binay-0 -> Vector(2, 0, 1), __consumer_offsets-9 -> Vector(2)), 1 -> Map(__consumer_offsets-47 -> Vector(1), __consumer_offsets-29 -> Vector(1), __consumer_offsets-41 -> Vector(1), __consumer_offsets-17 -> Vector(1), __consumer_offsets-14 -> Vector(1), __consumer_offsets-26 -> Vector(1), __consumer_offsets-20 -> Vector(1), __consumer_offsets-5 -> Vector(1), __consumer_offsets-8 -> Vector(1), __consumer_offsets-23 -> Vector(1), __consumer_offsets-11 -> Vector(1), __consumer_offsets-44 -> Vector(1), __consumer_offsets-32 -> Vector(1), binay-2 -> Vector(1, 2, 0), __consumer_offsets-35 -> Vector(1), __consumer_offsets-38 -> Vector(1), __consumer_offsets-2 -> Vector(1)), 0 -> Map(__consumer_offsets-19 -> Vector(0), __consumer_offsets-10 -> Vector(0), __consumer_offsets-40 -> Vector(0), __consumer_offsets-22 -> Vector(0), __consumer_offsets-13 -> Vector(0), __consumer_offsets-49 -> Vector(0), __consumer_offsets-28 -> Vector(0), __consumer_offsets-4 -> Vector(0), __consumer_offsets-37 -> Vector(0), __consumer_offsets-31 -> Vector(0), binay-1 -> Vector(0, 1, 2), __consumer_offsets-34 -> Vector(0), __consumer_offsets-46 -> Vector(0), __consumer_offsets-25 -> Vector(0), __consumer_offsets-43 -> Vector(0), __consumer_offsets-7 -> Vector(0), __consumer_offsets-1 -> Vector(0), __consumer_offsets-16 -> Vector(0))) (kafka.controller.KafkaController)
[2019-02-06 10:02:14,114] DEBUG [Controller id=1] Topics not in preferred replica Map(__consumer_offsets-30 -> Vector(2), __consumer_offsets-39 -> Vector(2), __consumer_offsets-18 -> Vector(2), __consumer_offsets-0 -> Vector(2), __consumer_offsets-24 -> Vector(2), __consumer_offsets-33 -> Vector(2), __consumer_offsets-21 -> Vector(2), __consumer_offsets-3 -> Vector(2), __consumer_offsets-12 -> Vector(2), __consumer_offsets-15 -> Vector(2), __consumer_offsets-48 -> Vector(2), __consumer_offsets-6 -> Vector(2), __consumer_offsets-42 -> Vector(2), __consumer_offsets-45 -> Vector(2), __consumer_offsets-27 -> Vector(2), __consumer_offsets-36 -> Vector(2), __consumer_offsets-9 -> Vector(2), binay-0 -> Vector(2, 0, 1)) (kafka.controller.KafkaController)
[2019-02-06 10:02:14,114] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2019-02-06 10:02:14,114] DEBUG [Controller id=1] Topics not in preferred replica Map(binay-2 -> Vector(1, 2, 0)) (kafka.controller.KafkaController)
[2019-02-06 10:02:14,114] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.058823529411764705 (kafka.controller.KafkaController)
[2019-02-06 10:02:14,114] DEBUG [Controller id=1] Topics not in preferred replica Map() (kafka.controller.KafkaController)
[2019-02-06 10:02:14,114] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2019-02-06 10:07:14,117] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-02-06 10:07:14,118] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-30 -> Vector(2), __consumer_offsets-39 -> Vector(2), __consumer_offsets-18 -> Vector(2), __consumer_offsets-0 -> Vector(2), __consumer_offsets-24 -> Vector(2), __consumer_offsets-33 -> Vector(2), __consumer_offsets-21 -> Vector(2), __consumer_offsets-3 -> Vector(2), __consumer_offsets-12 -> Vector(2), __consumer_offsets-15 -> Vector(2), __consumer_offsets-48 -> Vector(2), __consumer_offsets-6 -> Vector(2), __consumer_offsets-42 -> Vector(2), __consumer_offsets-27 -> Vector(2), __consumer_offsets-45 -> Vector(2), __consumer_offsets-36 -> Vector(2), binay-0 -> Vector(2, 0, 1), __consumer_offsets-9 -> Vector(2)), 1 -> Map(__consumer_offsets-47 -> Vector(1), __consumer_offsets-29 -> Vector(1), __consumer_offsets-41 -> Vector(1), __consumer_offsets-17 -> Vector(1), __consumer_offsets-14 -> Vector(1), __consumer_offsets-26 -> Vector(1), __consumer_offsets-20 -> Vector(1), __consumer_offsets-5 -> Vector(1), __consumer_offsets-8 -> Vector(1), __consumer_offsets-23 -> Vector(1), __consumer_offsets-11 -> Vector(1), __consumer_offsets-44 -> Vector(1), __consumer_offsets-32 -> Vector(1), binay-2 -> Vector(1, 2, 0), __consumer_offsets-35 -> Vector(1), __consumer_offsets-38 -> Vector(1), __consumer_offsets-2 -> Vector(1)), 0 -> Map(__consumer_offsets-19 -> Vector(0), __consumer_offsets-10 -> Vector(0), __consumer_offsets-40 -> Vector(0), __consumer_offsets-22 -> Vector(0), __consumer_offsets-13 -> Vector(0), __consumer_offsets-49 -> Vector(0), __consumer_offsets-28 -> Vector(0), __consumer_offsets-4 -> Vector(0), __consumer_offsets-37 -> Vector(0), __consumer_offsets-31 -> Vector(0), binay-1 -> Vector(0, 1, 2), __consumer_offsets-34 -> Vector(0), __consumer_offsets-46 -> Vector(0), __consumer_offsets-25 -> Vector(0), __consumer_offsets-43 -> Vector(0), __consumer_offsets-7 -> Vector(0), __consumer_offsets-1 -> Vector(0), __consumer_offsets-16 -> Vector(0))) (kafka.controller.KafkaController)
[2019-02-06 10:07:14,118] DEBUG [Controller id=1] Topics not in preferred replica Map(__consumer_offsets-30 -> Vector(2), __consumer_offsets-39 -> Vector(2), __consumer_offsets-18 -> Vector(2), __consumer_offsets-0 -> Vector(2), __consumer_offsets-24 -> Vector(2), __consumer_offsets-33 -> Vector(2), __consumer_offsets-21 -> Vector(2), __consumer_offsets-3 -> Vector(2), __consumer_offsets-12 -> Vector(2), __consumer_offsets-15 -> Vector(2), __consumer_offsets-48 -> Vector(2), __consumer_offsets-6 -> Vector(2), __consumer_offsets-42 -> Vector(2), __consumer_offsets-45 -> Vector(2), __consumer_offsets-27 -> Vector(2), __consumer_offsets-36 -> Vector(2), __consumer_offsets-9 -> Vector(2), binay-0 -> Vector(2, 0, 1)) (kafka.controller.KafkaController)
[2019-02-06 10:07:14,118] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2019-02-06 10:07:14,118] DEBUG [Controller id=1] Topics not in preferred replica Map(binay-2 -> Vector(1, 2, 0)) (kafka.controller.KafkaController)
[2019-02-06 10:07:14,118] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.058823529411764705 (kafka.controller.KafkaController)
[2019-02-06 10:07:14,118] DEBUG [Controller id=1] Topics not in preferred replica Map() (kafka.controller.KafkaController)
[2019-02-06 10:07:14,118] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2019-02-06 10:12:14,123] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-02-06 10:12:14,123] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-30 -> Vector(2), __consumer_offsets-39 -> Vector(2), __consumer_offsets-18 -> Vector(2), __consumer_offsets-0 -> Vector(2), __consumer_offsets-24 -> Vector(2), __consumer_offsets-33 -> Vector(2), __consumer_offsets-21 -> Vector(2), __consumer_offsets-3 -> Vector(2), __consumer_offsets-12 -> Vector(2), __consumer_offsets-15 -> Vector(2), __consumer_offsets-48 -> Vector(2), __consumer_offsets-6 -> Vector(2), __consumer_offsets-42 -> Vector(2), __consumer_offsets-27 -> Vector(2), __consumer_offsets-45 -> Vector(2), __consumer_offsets-36 -> Vector(2), binay-0 -> Vector(2, 0, 1), __consumer_offsets-9 -> Vector(2)), 1 -> Map(__consumer_offsets-47 -> Vector(1), __consumer_offsets-29 -> Vector(1), __consumer_offsets-41 -> Vector(1), __consumer_offsets-17 -> Vector(1), __consumer_offsets-14 -> Vector(1), __consumer_offsets-26 -> Vector(1), __consumer_offsets-20 -> Vector(1), __consumer_offsets-5 -> Vector(1), __consumer_offsets-8 -> Vector(1), __consumer_offsets-23 -> Vector(1), __consumer_offsets-11 -> Vector(1), __consumer_offsets-44 -> Vector(1), __consumer_offsets-32 -> Vector(1), binay-2 -> Vector(1, 2, 0), __consumer_offsets-35 -> Vector(1), __consumer_offsets-38 -> Vector(1), __consumer_offsets-2 -> Vector(1)), 0 -> Map(__consumer_offsets-19 -> Vector(0), __consumer_offsets-10 -> Vector(0), __consumer_offsets-40 -> Vector(0), __consumer_offsets-22 -> Vector(0), __consumer_offsets-13 -> Vector(0), __consumer_offsets-49 -> Vector(0), __consumer_offsets-28 -> Vector(0), __consumer_offsets-4 -> Vector(0), __consumer_offsets-37 -> Vector(0), __consumer_offsets-31 -> Vector(0), binay-1 -> Vector(0, 1, 2), __consumer_offsets-34 -> Vector(0), __consumer_offsets-46 -> Vector(0), __consumer_offsets-25 -> Vector(0), __consumer_offsets-43 -> Vector(0), __consumer_offsets-7 -> Vector(0), __consumer_offsets-1 -> Vector(0), __consumer_offsets-16 -> Vector(0))) (kafka.controller.KafkaController)
[2019-02-06 10:12:14,123] DEBUG [Controller id=1] Topics not in preferred replica Map(__consumer_offsets-30 -> Vector(2), __consumer_offsets-39 -> Vector(2), __consumer_offsets-18 -> Vector(2), __consumer_offsets-0 -> Vector(2), __consumer_offsets-24 -> Vector(2), __consumer_offsets-33 -> Vector(2), __consumer_offsets-21 -> Vector(2), __consumer_offsets-3 -> Vector(2), __consumer_offsets-12 -> Vector(2), __consumer_offsets-15 -> Vector(2), __consumer_offsets-48 -> Vector(2), __consumer_offsets-6 -> Vector(2), __consumer_offsets-42 -> Vector(2), __consumer_offsets-45 -> Vector(2), __consumer_offsets-27 -> Vector(2), __consumer_offsets-36 -> Vector(2), __consumer_offsets-9 -> Vector(2), binay-0 -> Vector(2, 0, 1)) (kafka.controller.KafkaController)
[2019-02-06 10:12:14,123] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2019-02-06 10:12:14,124] DEBUG [Controller id=1] Topics not in preferred replica Map(binay-2 -> Vector(1, 2, 0)) (kafka.controller.KafkaController)
[2019-02-06 10:12:14,124] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.058823529411764705 (kafka.controller.KafkaController)
[2019-02-06 10:12:14,124] DEBUG [Controller id=1] Topics not in preferred replica Map() (kafka.controller.KafkaController)
[2019-02-06 10:12:14,124] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2019-02-06 10:17:14,130] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-02-06 10:17:14,132] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-30 -> Vector(2), __consumer_offsets-39 -> Vector(2), __consumer_offsets-18 -> Vector(2), __consumer_offsets-0 -> Vector(2), __consumer_offsets-24 -> Vector(2), __consumer_offsets-33 -> Vector(2), __consumer_offsets-21 -> Vector(2), __consumer_offsets-3 -> Vector(2), __consumer_offsets-12 -> Vector(2), __consumer_offsets-15 -> Vector(2), __consumer_offsets-48 -> Vector(2), __consumer_offsets-6 -> Vector(2), __consumer_offsets-42 -> Vector(2), __consumer_offsets-27 -> Vector(2), __consumer_offsets-45 -> Vector(2), __consumer_offsets-36 -> Vector(2), binay-0 -> Vector(2, 0, 1), __consumer_offsets-9 -> Vector(2)), 1 -> Map(__consumer_offsets-47 -> Vector(1), __consumer_offsets-29 -> Vector(1), __consumer_offsets-41 -> Vector(1), __consumer_offsets-17 -> Vector(1), __consumer_offsets-14 -> Vector(1), __consumer_offsets-26 -> Vector(1), __consumer_offsets-20 -> Vector(1), __consumer_offsets-5 -> Vector(1), __consumer_offsets-8 -> Vector(1), __consumer_offsets-23 -> Vector(1), __consumer_offsets-11 -> Vector(1), __consumer_offsets-44 -> Vector(1), __consumer_offsets-32 -> Vector(1), binay-2 -> Vector(1, 2, 0), __consumer_offsets-35 -> Vector(1), __consumer_offsets-38 -> Vector(1), __consumer_offsets-2 -> Vector(1)), 0 -> Map(__consumer_offsets-19 -> Vector(0), __consumer_offsets-10 -> Vector(0), __consumer_offsets-40 -> Vector(0), __consumer_offsets-22 -> Vector(0), __consumer_offsets-13 -> Vector(0), __consumer_offsets-49 -> Vector(0), __consumer_offsets-28 -> Vector(0), __consumer_offsets-4 -> Vector(0), __consumer_offsets-37 -> Vector(0), __consumer_offsets-31 -> Vector(0), binay-1 -> Vector(0, 1, 2), __consumer_offsets-34 -> Vector(0), __consumer_offsets-46 -> Vector(0), __consumer_offsets-25 -> Vector(0), __consumer_offsets-43 -> Vector(0), __consumer_offsets-7 -> Vector(0), __consumer_offsets-1 -> Vector(0), __consumer_offsets-16 -> Vector(0))) (kafka.controller.KafkaController)
[2019-02-06 10:17:14,133] DEBUG [Controller id=1] Topics not in preferred replica Map(__consumer_offsets-30 -> Vector(2), __consumer_offsets-39 -> Vector(2), __consumer_offsets-18 -> Vector(2), __consumer_offsets-0 -> Vector(2), __consumer_offsets-24 -> Vector(2), __consumer_offsets-33 -> Vector(2), __consumer_offsets-21 -> Vector(2), __consumer_offsets-3 -> Vector(2), __consumer_offsets-12 -> Vector(2), __consumer_offsets-15 -> Vector(2), __consumer_offsets-48 -> Vector(2), __consumer_offsets-6 -> Vector(2), __consumer_offsets-42 -> Vector(2), __consumer_offsets-45 -> Vector(2), __consumer_offsets-27 -> Vector(2), __consumer_offsets-36 -> Vector(2), __consumer_offsets-9 -> Vector(2), binay-0 -> Vector(2, 0, 1)) (kafka.controller.KafkaController)
[2019-02-06 10:17:14,133] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2019-02-06 10:17:14,133] DEBUG [Controller id=1] Topics not in preferred replica Map(binay-2 -> Vector(1, 2, 0)) (kafka.controller.KafkaController)
[2019-02-06 10:17:14,133] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.058823529411764705 (kafka.controller.KafkaController)
[2019-02-06 10:17:14,133] DEBUG [Controller id=1] Topics not in preferred replica Map() (kafka.controller.KafkaController)
[2019-02-06 10:17:14,133] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2019-02-06 10:22:14,139] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-02-06 10:22:14,145] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-30 -> Vector(2), __consumer_offsets-39 -> Vector(2), __consumer_offsets-18 -> Vector(2), __consumer_offsets-0 -> Vector(2), __consumer_offsets-24 -> Vector(2), __consumer_offsets-33 -> Vector(2), __consumer_offsets-21 -> Vector(2), __consumer_offsets-3 -> Vector(2), __consumer_offsets-12 -> Vector(2), __consumer_offsets-15 -> Vector(2), __consumer_offsets-48 -> Vector(2), __consumer_offsets-6 -> Vector(2), __consumer_offsets-42 -> Vector(2), __consumer_offsets-27 -> Vector(2), __consumer_offsets-45 -> Vector(2), __consumer_offsets-36 -> Vector(2), binay-0 -> Vector(2, 0, 1), __consumer_offsets-9 -> Vector(2)), 1 -> Map(__consumer_offsets-47 -> Vector(1), __consumer_offsets-29 -> Vector(1), __consumer_offsets-41 -> Vector(1), __consumer_offsets-17 -> Vector(1), __consumer_offsets-14 -> Vector(1), __consumer_offsets-26 -> Vector(1), __consumer_offsets-20 -> Vector(1), __consumer_offsets-5 -> Vector(1), __consumer_offsets-8 -> Vector(1), __consumer_offsets-23 -> Vector(1), __consumer_offsets-11 -> Vector(1), __consumer_offsets-44 -> Vector(1), __consumer_offsets-32 -> Vector(1), binay-2 -> Vector(1, 2, 0), __consumer_offsets-35 -> Vector(1), __consumer_offsets-38 -> Vector(1), __consumer_offsets-2 -> Vector(1)), 0 -> Map(__consumer_offsets-19 -> Vector(0), __consumer_offsets-10 -> Vector(0), __consumer_offsets-40 -> Vector(0), __consumer_offsets-22 -> Vector(0), __consumer_offsets-13 -> Vector(0), __consumer_offsets-49 -> Vector(0), __consumer_offsets-28 -> Vector(0), __consumer_offsets-4 -> Vector(0), __consumer_offsets-37 -> Vector(0), __consumer_offsets-31 -> Vector(0), binay-1 -> Vector(0, 1, 2), __consumer_offsets-34 -> Vector(0), __consumer_offsets-46 -> Vector(0), __consumer_offsets-25 -> Vector(0), __consumer_offsets-43 -> Vector(0), __consumer_offsets-7 -> Vector(0), __consumer_offsets-1 -> Vector(0), __consumer_offsets-16 -> Vector(0))) (kafka.controller.KafkaController)
[2019-02-06 10:22:14,145] DEBUG [Controller id=1] Topics not in preferred replica Map(__consumer_offsets-30 -> Vector(2), __consumer_offsets-39 -> Vector(2), __consumer_offsets-18 -> Vector(2), __consumer_offsets-0 -> Vector(2), __consumer_offsets-24 -> Vector(2), __consumer_offsets-33 -> Vector(2), __consumer_offsets-21 -> Vector(2), __consumer_offsets-3 -> Vector(2), __consumer_offsets-12 -> Vector(2), __consumer_offsets-15 -> Vector(2), __consumer_offsets-48 -> Vector(2), __consumer_offsets-6 -> Vector(2), __consumer_offsets-42 -> Vector(2), __consumer_offsets-45 -> Vector(2), __consumer_offsets-27 -> Vector(2), __consumer_offsets-36 -> Vector(2), __consumer_offsets-9 -> Vector(2), binay-0 -> Vector(2, 0, 1)) (kafka.controller.KafkaController)
[2019-02-06 10:22:14,146] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2019-02-06 10:22:14,146] DEBUG [Controller id=1] Topics not in preferred replica Map(binay-2 -> Vector(1, 2, 0)) (kafka.controller.KafkaController)
[2019-02-06 10:22:14,146] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.058823529411764705 (kafka.controller.KafkaController)
[2019-02-06 10:22:14,146] DEBUG [Controller id=1] Topics not in preferred replica Map() (kafka.controller.KafkaController)
[2019-02-06 10:22:14,146] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2019-02-06 10:27:14,148] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-02-06 10:27:14,154] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-30 -> Vector(2), __consumer_offsets-39 -> Vector(2), __consumer_offsets-18 -> Vector(2), __consumer_offsets-0 -> Vector(2), __consumer_offsets-24 -> Vector(2), __consumer_offsets-33 -> Vector(2), __consumer_offsets-21 -> Vector(2), __consumer_offsets-3 -> Vector(2), __consumer_offsets-12 -> Vector(2), __consumer_offsets-15 -> Vector(2), __consumer_offsets-48 -> Vector(2), __consumer_offsets-6 -> Vector(2), __consumer_offsets-42 -> Vector(2), __consumer_offsets-27 -> Vector(2), __consumer_offsets-45 -> Vector(2), __consumer_offsets-36 -> Vector(2), binay-0 -> Vector(2, 0, 1), __consumer_offsets-9 -> Vector(2)), 1 -> Map(__consumer_offsets-47 -> Vector(1), __consumer_offsets-29 -> Vector(1), __consumer_offsets-41 -> Vector(1), __consumer_offsets-17 -> Vector(1), __consumer_offsets-14 -> Vector(1), __consumer_offsets-26 -> Vector(1), __consumer_offsets-20 -> Vector(1), __consumer_offsets-5 -> Vector(1), __consumer_offsets-8 -> Vector(1), __consumer_offsets-23 -> Vector(1), __consumer_offsets-11 -> Vector(1), __consumer_offsets-44 -> Vector(1), __consumer_offsets-32 -> Vector(1), binay-2 -> Vector(1, 2, 0), __consumer_offsets-35 -> Vector(1), __consumer_offsets-38 -> Vector(1), __consumer_offsets-2 -> Vector(1)), 0 -> Map(__consumer_offsets-19 -> Vector(0), __consumer_offsets-10 -> Vector(0), __consumer_offsets-40 -> Vector(0), __consumer_offsets-22 -> Vector(0), __consumer_offsets-13 -> Vector(0), __consumer_offsets-49 -> Vector(0), __consumer_offsets-28 -> Vector(0), __consumer_offsets-4 -> Vector(0), __consumer_offsets-37 -> Vector(0), __consumer_offsets-31 -> Vector(0), binay-1 -> Vector(0, 1, 2), __consumer_offsets-34 -> Vector(0), __consumer_offsets-46 -> Vector(0), __consumer_offsets-25 -> Vector(0), __consumer_offsets-43 -> Vector(0), __consumer_offsets-7 -> Vector(0), __consumer_offsets-1 -> Vector(0), __consumer_offsets-16 -> Vector(0))) (kafka.controller.KafkaController)
[2019-02-06 10:27:14,155] DEBUG [Controller id=1] Topics not in preferred replica Map(__consumer_offsets-30 -> Vector(2), __consumer_offsets-39 -> Vector(2), __consumer_offsets-18 -> Vector(2), __consumer_offsets-0 -> Vector(2), __consumer_offsets-24 -> Vector(2), __consumer_offsets-33 -> Vector(2), __consumer_offsets-21 -> Vector(2), __consumer_offsets-3 -> Vector(2), __consumer_offsets-12 -> Vector(2), __consumer_offsets-15 -> Vector(2), __consumer_offsets-48 -> Vector(2), __consumer_offsets-6 -> Vector(2), __consumer_offsets-42 -> Vector(2), __consumer_offsets-45 -> Vector(2), __consumer_offsets-27 -> Vector(2), __consumer_offsets-36 -> Vector(2), __consumer_offsets-9 -> Vector(2), binay-0 -> Vector(2, 0, 1)) (kafka.controller.KafkaController)
[2019-02-06 10:27:14,155] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2019-02-06 10:27:14,155] DEBUG [Controller id=1] Topics not in preferred replica Map(binay-2 -> Vector(1, 2, 0)) (kafka.controller.KafkaController)
[2019-02-06 10:27:14,155] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.058823529411764705 (kafka.controller.KafkaController)
[2019-02-06 10:27:14,155] DEBUG [Controller id=1] Topics not in preferred replica Map() (kafka.controller.KafkaController)
[2019-02-06 10:27:14,155] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2019-02-06 10:33:04,295] INFO [Controller id=1] Newly added brokers: , deleted brokers: 0, all live brokers: 1 (kafka.controller.KafkaController)
[2019-02-06 10:33:04,296] INFO [Controller-1-to-broker-0-send-thread]: Shutting down (kafka.controller.RequestSendThread)
[2019-02-06 10:33:04,296] INFO [Controller-1-to-broker-0-send-thread]: Stopped (kafka.controller.RequestSendThread)
[2019-02-06 10:33:04,296] INFO [Controller-1-to-broker-0-send-thread]: Shutdown completed (kafka.controller.RequestSendThread)
[2019-02-06 10:33:04,305] INFO [Controller id=1] Broker failure callback for 0 (kafka.controller.KafkaController)
[2019-02-06 10:33:04,308] INFO [Controller id=1] Removed Vector() from list of shutting down brokers. (kafka.controller.KafkaController)
[2019-02-06 10:33:04,312] INFO [PartitionStateMachine controllerId=1] Invoking state change to OfflinePartition for partitions __consumer_offsets-19,__consumer_offsets-30,__consumer_offsets-39,__consumer_offsets-10,__consumer_offsets-40,__consumer_offsets-18,__consumer_offsets-0,__consumer_offsets-24,__consumer_offsets-33,__consumer_offsets-22,__consumer_offsets-21,__consumer_offsets-3,__consumer_offsets-12,__consumer_offsets-15,__consumer_offsets-48,__consumer_offsets-13,__consumer_offsets-49,__consumer_offsets-6,__consumer_offsets-28,__consumer_offsets-4,__consumer_offsets-37,__consumer_offsets-31,binay-1,__consumer_offsets-42,__consumer_offsets-34,__consumer_offsets-46,__consumer_offsets-25,__consumer_offsets-27,__consumer_offsets-45,__consumer_offsets-43,__consumer_offsets-36,binay-2,__consumer_offsets-7,__consumer_offsets-9,binay-0,__consumer_offsets-1,__consumer_offsets-16 (kafka.controller.PartitionStateMachine)
[2019-02-06 10:33:04,391] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for binay-1. Select 1 from ISR 1 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-06 10:33:04,392] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":2,"isr":[1]} for offline partition binay-1 (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-06 10:33:04,395] DEBUG [PartitionStateMachine controllerId=1] After leader election, leader cache for binay-1 is updated to (Leader:1,ISR:1,LeaderEpoch:2,ControllerEpoch:4) (kafka.controller.PartitionStateMachine)
[2019-02-06 10:33:04,417] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for binay-2. Select 1 from ISR 1 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-06 10:33:04,417] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":4,"isr":[1]} for offline partition binay-2 (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-06 10:33:04,418] DEBUG [PartitionStateMachine controllerId=1] After leader election, leader cache for binay-2 is updated to (Leader:1,ISR:1,LeaderEpoch:4,ControllerEpoch:4) (kafka.controller.PartitionStateMachine)
[2019-02-06 10:33:04,421] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for binay-0. Select 1 from ISR 1 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-06 10:33:04,421] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":2,"isr":[1]} for offline partition binay-0 (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-06 10:33:04,422] DEBUG [PartitionStateMachine controllerId=1] After leader election, leader cache for binay-0 is updated to (Leader:1,ISR:1,LeaderEpoch:2,ControllerEpoch:4) (kafka.controller.PartitionStateMachine)
[2019-02-06 10:33:04,428] INFO [ReplicaStateMachine controllerId=1] Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=25,Replica=0],[Topic=__consumer_offsets,Partition=31,Replica=0],[Topic=__consumer_offsets,Partition=40,Replica=0],[Topic=binay,Partition=2,Replica=0],[Topic=__consumer_offsets,Partition=43,Replica=0],[Topic=binay,Partition=1,Replica=0],[Topic=__consumer_offsets,Partition=4,Replica=0],[Topic=__consumer_offsets,Partition=34,Replica=0],[Topic=__consumer_offsets,Partition=37,Replica=0],[Topic=__consumer_offsets,Partition=10,Replica=0],[Topic=__consumer_offsets,Partition=28,Replica=0],[Topic=__consumer_offsets,Partition=46,Replica=0],[Topic=__consumer_offsets,Partition=49,Replica=0],[Topic=__consumer_offsets,Partition=22,Replica=0],[Topic=__consumer_offsets,Partition=1,Replica=0],[Topic=binay,Partition=0,Replica=0],[Topic=__consumer_offsets,Partition=16,Replica=0],[Topic=__consumer_offsets,Partition=13,Replica=0],[Topic=__consumer_offsets,Partition=7,Replica=0],[Topic=__consumer_offsets,Partition=19,Replica=0] (kafka.controller.ReplicaStateMachine)
[2019-02-06 10:33:04,430] INFO [Controller-1-to-broker-1-send-thread]: Controller 1 connected to localhost:9091 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2019-02-06 10:33:04,445] DEBUG [Controller id=1] Removing replica 0 from ISR 0 for partition __consumer_offsets-25. (kafka.controller.KafkaController)
[2019-02-06 10:33:04,448] INFO [Controller id=1] Retaining last ISR 0 of partition __consumer_offsets-25 since unclean leader election is disabled (kafka.controller.KafkaController)
[2019-02-06 10:33:04,450] INFO [Controller id=1] New leader and ISR for partition __consumer_offsets-25 is {"leader":-1,"leader_epoch":1,"isr":[0]} (kafka.controller.KafkaController)
[2019-02-06 10:33:04,454] DEBUG [Controller id=1] Removing replica 0 from ISR 0 for partition __consumer_offsets-31. (kafka.controller.KafkaController)
[2019-02-06 10:33:04,456] INFO [Controller id=1] Retaining last ISR 0 of partition __consumer_offsets-31 since unclean leader election is disabled (kafka.controller.KafkaController)
[2019-02-06 10:33:04,457] INFO [Controller id=1] New leader and ISR for partition __consumer_offsets-31 is {"leader":-1,"leader_epoch":1,"isr":[0]} (kafka.controller.KafkaController)
[2019-02-06 10:33:04,457] DEBUG [Controller id=1] Removing replica 0 from ISR 0 for partition __consumer_offsets-40. (kafka.controller.KafkaController)
[2019-02-06 10:33:04,458] INFO [Controller id=1] Retaining last ISR 0 of partition __consumer_offsets-40 since unclean leader election is disabled (kafka.controller.KafkaController)
[2019-02-06 10:33:04,459] INFO [Controller id=1] New leader and ISR for partition __consumer_offsets-40 is {"leader":-1,"leader_epoch":1,"isr":[0]} (kafka.controller.KafkaController)
[2019-02-06 10:33:04,460] DEBUG [Controller id=1] Removing replica 0 from ISR 1 for partition binay-2. (kafka.controller.KafkaController)
[2019-02-06 10:33:04,461] WARN [Controller id=1] Cannot remove replica 0 from ISR of partition binay-2 since it is not in the ISR. Leader = 1 ; ISR = List(1) (kafka.controller.KafkaController)
[2019-02-06 10:33:04,462] DEBUG [Controller id=1] Removing replica 0 from ISR 0 for partition __consumer_offsets-43. (kafka.controller.KafkaController)
[2019-02-06 10:33:04,463] INFO [Controller id=1] Retaining last ISR 0 of partition __consumer_offsets-43 since unclean leader election is disabled (kafka.controller.KafkaController)
[2019-02-06 10:33:04,464] INFO [Controller id=1] New leader and ISR for partition __consumer_offsets-43 is {"leader":-1,"leader_epoch":1,"isr":[0]} (kafka.controller.KafkaController)
[2019-02-06 10:33:04,465] DEBUG [Controller id=1] Removing replica 0 from ISR 1 for partition binay-1. (kafka.controller.KafkaController)
[2019-02-06 10:33:04,465] WARN [Controller id=1] Cannot remove replica 0 from ISR of partition binay-1 since it is not in the ISR. Leader = 1 ; ISR = List(1) (kafka.controller.KafkaController)
[2019-02-06 10:33:04,466] DEBUG [Controller id=1] Removing replica 0 from ISR 0 for partition __consumer_offsets-4. (kafka.controller.KafkaController)
[2019-02-06 10:33:04,467] INFO [Controller id=1] Retaining last ISR 0 of partition __consumer_offsets-4 since unclean leader election is disabled (kafka.controller.KafkaController)
[2019-02-06 10:33:04,469] INFO [Controller id=1] New leader and ISR for partition __consumer_offsets-4 is {"leader":-1,"leader_epoch":1,"isr":[0]} (kafka.controller.KafkaController)
[2019-02-06 10:33:04,470] DEBUG [Controller id=1] Removing replica 0 from ISR 0 for partition __consumer_offsets-34. (kafka.controller.KafkaController)
[2019-02-06 10:33:04,471] INFO [Controller id=1] Retaining last ISR 0 of partition __consumer_offsets-34 since unclean leader election is disabled (kafka.controller.KafkaController)
[2019-02-06 10:33:04,473] INFO [Controller id=1] New leader and ISR for partition __consumer_offsets-34 is {"leader":-1,"leader_epoch":1,"isr":[0]} (kafka.controller.KafkaController)
[2019-02-06 10:33:04,473] DEBUG [Controller id=1] Removing replica 0 from ISR 0 for partition __consumer_offsets-37. (kafka.controller.KafkaController)
[2019-02-06 10:33:04,474] INFO [Controller id=1] Retaining last ISR 0 of partition __consumer_offsets-37 since unclean leader election is disabled (kafka.controller.KafkaController)
[2019-02-06 10:33:04,475] INFO [Controller id=1] New leader and ISR for partition __consumer_offsets-37 is {"leader":-1,"leader_epoch":1,"isr":[0]} (kafka.controller.KafkaController)
[2019-02-06 10:33:04,476] DEBUG [Controller id=1] Removing replica 0 from ISR 0 for partition __consumer_offsets-10. (kafka.controller.KafkaController)
[2019-02-06 10:33:04,477] INFO [Controller id=1] Retaining last ISR 0 of partition __consumer_offsets-10 since unclean leader election is disabled (kafka.controller.KafkaController)
[2019-02-06 10:33:04,479] INFO [Controller id=1] New leader and ISR for partition __consumer_offsets-10 is {"leader":-1,"leader_epoch":1,"isr":[0]} (kafka.controller.KafkaController)
[2019-02-06 10:33:04,479] DEBUG [Controller id=1] Removing replica 0 from ISR 0 for partition __consumer_offsets-28. (kafka.controller.KafkaController)
[2019-02-06 10:33:04,481] INFO [Controller id=1] Retaining last ISR 0 of partition __consumer_offsets-28 since unclean leader election is disabled (kafka.controller.KafkaController)
[2019-02-06 10:33:04,481] INFO [Controller id=1] New leader and ISR for partition __consumer_offsets-28 is {"leader":-1,"leader_epoch":1,"isr":[0]} (kafka.controller.KafkaController)
[2019-02-06 10:33:04,482] DEBUG [Controller id=1] Removing replica 0 from ISR 0 for partition __consumer_offsets-46. (kafka.controller.KafkaController)
[2019-02-06 10:33:04,483] INFO [Controller id=1] Retaining last ISR 0 of partition __consumer_offsets-46 since unclean leader election is disabled (kafka.controller.KafkaController)
[2019-02-06 10:33:04,484] INFO [Controller id=1] New leader and ISR for partition __consumer_offsets-46 is {"leader":-1,"leader_epoch":1,"isr":[0]} (kafka.controller.KafkaController)
[2019-02-06 10:33:04,485] DEBUG [Controller id=1] Removing replica 0 from ISR 0 for partition __consumer_offsets-49. (kafka.controller.KafkaController)
[2019-02-06 10:33:04,487] INFO [Controller id=1] Retaining last ISR 0 of partition __consumer_offsets-49 since unclean leader election is disabled (kafka.controller.KafkaController)
[2019-02-06 10:33:04,488] INFO [Controller id=1] New leader and ISR for partition __consumer_offsets-49 is {"leader":-1,"leader_epoch":1,"isr":[0]} (kafka.controller.KafkaController)
[2019-02-06 10:33:04,488] DEBUG [Controller id=1] Removing replica 0 from ISR 0 for partition __consumer_offsets-22. (kafka.controller.KafkaController)
[2019-02-06 10:33:04,490] INFO [Controller id=1] Retaining last ISR 0 of partition __consumer_offsets-22 since unclean leader election is disabled (kafka.controller.KafkaController)
[2019-02-06 10:33:04,492] INFO [Controller id=1] New leader and ISR for partition __consumer_offsets-22 is {"leader":-1,"leader_epoch":1,"isr":[0]} (kafka.controller.KafkaController)
[2019-02-06 10:33:04,492] DEBUG [Controller id=1] Removing replica 0 from ISR 0 for partition __consumer_offsets-1. (kafka.controller.KafkaController)
[2019-02-06 10:33:04,494] INFO [Controller id=1] Retaining last ISR 0 of partition __consumer_offsets-1 since unclean leader election is disabled (kafka.controller.KafkaController)
[2019-02-06 10:33:04,496] INFO [Controller id=1] New leader and ISR for partition __consumer_offsets-1 is {"leader":-1,"leader_epoch":1,"isr":[0]} (kafka.controller.KafkaController)
[2019-02-06 10:33:04,497] DEBUG [Controller id=1] Removing replica 0 from ISR 1 for partition binay-0. (kafka.controller.KafkaController)
[2019-02-06 10:33:04,498] WARN [Controller id=1] Cannot remove replica 0 from ISR of partition binay-0 since it is not in the ISR. Leader = 1 ; ISR = List(1) (kafka.controller.KafkaController)
[2019-02-06 10:33:04,498] DEBUG [Controller id=1] Removing replica 0 from ISR 0 for partition __consumer_offsets-16. (kafka.controller.KafkaController)
[2019-02-06 10:33:04,500] INFO [Controller id=1] Retaining last ISR 0 of partition __consumer_offsets-16 since unclean leader election is disabled (kafka.controller.KafkaController)
[2019-02-06 10:33:04,502] INFO [Controller id=1] New leader and ISR for partition __consumer_offsets-16 is {"leader":-1,"leader_epoch":1,"isr":[0]} (kafka.controller.KafkaController)
[2019-02-06 10:33:04,502] DEBUG [Controller id=1] Removing replica 0 from ISR 0 for partition __consumer_offsets-13. (kafka.controller.KafkaController)
[2019-02-06 10:33:04,504] INFO [Controller id=1] Retaining last ISR 0 of partition __consumer_offsets-13 since unclean leader election is disabled (kafka.controller.KafkaController)
[2019-02-06 10:33:04,506] INFO [Controller id=1] New leader and ISR for partition __consumer_offsets-13 is {"leader":-1,"leader_epoch":1,"isr":[0]} (kafka.controller.KafkaController)
[2019-02-06 10:33:04,506] DEBUG [Controller id=1] Removing replica 0 from ISR 0 for partition __consumer_offsets-7. (kafka.controller.KafkaController)
[2019-02-06 10:33:04,511] INFO [Controller id=1] Retaining last ISR 0 of partition __consumer_offsets-7 since unclean leader election is disabled (kafka.controller.KafkaController)
[2019-02-06 10:33:04,513] INFO [Controller id=1] New leader and ISR for partition __consumer_offsets-7 is {"leader":-1,"leader_epoch":1,"isr":[0]} (kafka.controller.KafkaController)
[2019-02-06 10:33:04,513] DEBUG [Controller id=1] Removing replica 0 from ISR 0 for partition __consumer_offsets-19. (kafka.controller.KafkaController)
[2019-02-06 10:33:04,516] INFO [Controller id=1] Retaining last ISR 0 of partition __consumer_offsets-19 since unclean leader election is disabled (kafka.controller.KafkaController)
[2019-02-06 10:33:04,516] INFO [Controller id=1] New leader and ISR for partition __consumer_offsets-19 is {"leader":-1,"leader_epoch":1,"isr":[0]} (kafka.controller.KafkaController)
[2019-02-06 10:33:04,518] WARN [Channel manager on controller 1]: Not sending request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=4, partitionStates={binay-2=PartitionState(controllerEpoch=4, leader=1, leaderEpoch=4, isr=1, zkVersion=10, replicas=1,2,0, isNew=false), binay-1=PartitionState(controllerEpoch=4, leader=1, leaderEpoch=2, isr=1, zkVersion=4, replicas=0,1,2, isNew=false), binay-0=PartitionState(controllerEpoch=4, leader=1, leaderEpoch=2, isr=1, zkVersion=4, replicas=2,0,1, isNew=false)}, liveLeaders=(localhost:9091 (id: 1 rack: null))) to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2019-02-06 10:33:04,522] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-02-06 10:33:04,523] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=__consumer_offsets,Partition=25,Replica=0],[Topic=__consumer_offsets,Partition=31,Replica=0],[Topic=__consumer_offsets,Partition=40,Replica=0],[Topic=binay,Partition=2,Replica=0],[Topic=__consumer_offsets,Partition=43,Replica=0],[Topic=binay,Partition=1,Replica=0],[Topic=__consumer_offsets,Partition=4,Replica=0],[Topic=__consumer_offsets,Partition=34,Replica=0],[Topic=__consumer_offsets,Partition=37,Replica=0],[Topic=__consumer_offsets,Partition=10,Replica=0],[Topic=__consumer_offsets,Partition=28,Replica=0],[Topic=__consumer_offsets,Partition=46,Replica=0],[Topic=__consumer_offsets,Partition=49,Replica=0],[Topic=__consumer_offsets,Partition=22,Replica=0],[Topic=__consumer_offsets,Partition=1,Replica=0],[Topic=binay,Partition=0,Replica=0],[Topic=__consumer_offsets,Partition=16,Replica=0],[Topic=__consumer_offsets,Partition=13,Replica=0],[Topic=__consumer_offsets,Partition=7,Replica=0],[Topic=__consumer_offsets,Partition=19,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2019-02-06 10:33:04,525] WARN [Channel manager on controller 1]: Not sending request (type=StopReplicaRequest, controllerId=1, controllerEpoch=4, deletePartitions=false, partitions=__consumer_offsets-22,__consumer_offsets-4,binay-2,__consumer_offsets-7,__consumer_offsets-46,__consumer_offsets-25,__consumer_offsets-49,__consumer_offsets-16,__consumer_offsets-28,__consumer_offsets-31,__consumer_offsets-37,binay-0,__consumer_offsets-19,__consumer_offsets-13,__consumer_offsets-43,binay-1,__consumer_offsets-1,__consumer_offsets-34,__consumer_offsets-10,__consumer_offsets-40) to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2019-02-06 10:33:06,071] INFO [Controller id=1] Newly added brokers: 0, deleted brokers: , all live brokers: 0,1 (kafka.controller.KafkaController)
[2019-02-06 10:33:06,071] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2019-02-06 10:33:06,075] INFO [Controller-1-to-broker-0-send-thread]: Starting (kafka.controller.RequestSendThread)
[2019-02-06 10:33:06,076] INFO [Controller id=1] New broker startup callback for 0 (kafka.controller.KafkaController)
[2019-02-06 10:33:06,082] INFO [Controller-1-to-broker-0-send-thread]: Controller 1 connected to localhost:9090 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2019-02-06 10:33:06,083] INFO [ReplicaStateMachine controllerId=1] Invoking state change to OnlineReplica for replicas [Topic=__consumer_offsets,Partition=25,Replica=0],[Topic=__consumer_offsets,Partition=31,Replica=0],[Topic=__consumer_offsets,Partition=40,Replica=0],[Topic=binay,Partition=2,Replica=0],[Topic=__consumer_offsets,Partition=43,Replica=0],[Topic=binay,Partition=1,Replica=0],[Topic=__consumer_offsets,Partition=4,Replica=0],[Topic=__consumer_offsets,Partition=34,Replica=0],[Topic=__consumer_offsets,Partition=37,Replica=0],[Topic=__consumer_offsets,Partition=10,Replica=0],[Topic=__consumer_offsets,Partition=28,Replica=0],[Topic=__consumer_offsets,Partition=46,Replica=0],[Topic=__consumer_offsets,Partition=49,Replica=0],[Topic=__consumer_offsets,Partition=22,Replica=0],[Topic=__consumer_offsets,Partition=1,Replica=0],[Topic=binay,Partition=0,Replica=0],[Topic=__consumer_offsets,Partition=16,Replica=0],[Topic=__consumer_offsets,Partition=13,Replica=0],[Topic=__consumer_offsets,Partition=7,Replica=0],[Topic=__consumer_offsets,Partition=19,Replica=0] (kafka.controller.ReplicaStateMachine)
[2019-02-06 10:33:06,092] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for __consumer_offsets-19. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-06 10:33:06,092] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":2,"isr":[0]} for offline partition __consumer_offsets-19 (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-06 10:33:06,094] DEBUG [PartitionStateMachine controllerId=1] After leader election, leader cache for __consumer_offsets-19 is updated to (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:4) (kafka.controller.PartitionStateMachine)
[2019-02-06 10:33:06,101] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for __consumer_offsets-10. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-06 10:33:06,101] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":2,"isr":[0]} for offline partition __consumer_offsets-10 (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-06 10:33:06,102] DEBUG [PartitionStateMachine controllerId=1] After leader election, leader cache for __consumer_offsets-10 is updated to (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:4) (kafka.controller.PartitionStateMachine)
[2019-02-06 10:33:06,104] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for __consumer_offsets-40. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-06 10:33:06,104] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":2,"isr":[0]} for offline partition __consumer_offsets-40 (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-06 10:33:06,106] DEBUG [PartitionStateMachine controllerId=1] After leader election, leader cache for __consumer_offsets-40 is updated to (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:4) (kafka.controller.PartitionStateMachine)
[2019-02-06 10:33:06,140] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for __consumer_offsets-22. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-06 10:33:06,140] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":2,"isr":[0]} for offline partition __consumer_offsets-22 (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-06 10:33:06,144] DEBUG [PartitionStateMachine controllerId=1] After leader election, leader cache for __consumer_offsets-22 is updated to (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:4) (kafka.controller.PartitionStateMachine)
[2019-02-06 10:33:06,159] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for __consumer_offsets-13. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-06 10:33:06,159] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":2,"isr":[0]} for offline partition __consumer_offsets-13 (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-06 10:33:06,160] DEBUG [PartitionStateMachine controllerId=1] After leader election, leader cache for __consumer_offsets-13 is updated to (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:4) (kafka.controller.PartitionStateMachine)
[2019-02-06 10:33:06,164] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for __consumer_offsets-49. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-06 10:33:06,165] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":2,"isr":[0]} for offline partition __consumer_offsets-49 (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-06 10:33:06,166] DEBUG [PartitionStateMachine controllerId=1] After leader election, leader cache for __consumer_offsets-49 is updated to (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:4) (kafka.controller.PartitionStateMachine)
[2019-02-06 10:33:06,167] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for __consumer_offsets-4. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-06 10:33:06,167] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":2,"isr":[0]} for offline partition __consumer_offsets-4 (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-06 10:33:06,169] DEBUG [PartitionStateMachine controllerId=1] After leader election, leader cache for __consumer_offsets-4 is updated to (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:4) (kafka.controller.PartitionStateMachine)
[2019-02-06 10:33:06,171] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for __consumer_offsets-28. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-06 10:33:06,171] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":2,"isr":[0]} for offline partition __consumer_offsets-28 (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-06 10:33:06,173] DEBUG [PartitionStateMachine controllerId=1] After leader election, leader cache for __consumer_offsets-28 is updated to (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:4) (kafka.controller.PartitionStateMachine)
[2019-02-06 10:33:06,174] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for __consumer_offsets-37. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-06 10:33:06,174] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":2,"isr":[0]} for offline partition __consumer_offsets-37 (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-06 10:33:06,176] DEBUG [PartitionStateMachine controllerId=1] After leader election, leader cache for __consumer_offsets-37 is updated to (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:4) (kafka.controller.PartitionStateMachine)
[2019-02-06 10:33:06,177] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for __consumer_offsets-31. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-06 10:33:06,177] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":2,"isr":[0]} for offline partition __consumer_offsets-31 (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-06 10:33:06,180] DEBUG [PartitionStateMachine controllerId=1] After leader election, leader cache for __consumer_offsets-31 is updated to (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:4) (kafka.controller.PartitionStateMachine)
[2019-02-06 10:33:06,185] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for __consumer_offsets-34. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-06 10:33:06,185] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":2,"isr":[0]} for offline partition __consumer_offsets-34 (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-06 10:33:06,186] DEBUG [PartitionStateMachine controllerId=1] After leader election, leader cache for __consumer_offsets-34 is updated to (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:4) (kafka.controller.PartitionStateMachine)
[2019-02-06 10:33:06,187] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for __consumer_offsets-46. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-06 10:33:06,188] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":2,"isr":[0]} for offline partition __consumer_offsets-46 (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-06 10:33:06,189] DEBUG [PartitionStateMachine controllerId=1] After leader election, leader cache for __consumer_offsets-46 is updated to (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:4) (kafka.controller.PartitionStateMachine)
[2019-02-06 10:33:06,190] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for __consumer_offsets-25. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-06 10:33:06,190] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":2,"isr":[0]} for offline partition __consumer_offsets-25 (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-06 10:33:06,191] DEBUG [PartitionStateMachine controllerId=1] After leader election, leader cache for __consumer_offsets-25 is updated to (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:4) (kafka.controller.PartitionStateMachine)
[2019-02-06 10:33:06,198] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for __consumer_offsets-43. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-06 10:33:06,198] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":2,"isr":[0]} for offline partition __consumer_offsets-43 (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-06 10:33:06,201] DEBUG [PartitionStateMachine controllerId=1] After leader election, leader cache for __consumer_offsets-43 is updated to (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:4) (kafka.controller.PartitionStateMachine)
[2019-02-06 10:33:06,205] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for __consumer_offsets-7. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-06 10:33:06,205] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":2,"isr":[0]} for offline partition __consumer_offsets-7 (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-06 10:33:06,207] DEBUG [PartitionStateMachine controllerId=1] After leader election, leader cache for __consumer_offsets-7 is updated to (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:4) (kafka.controller.PartitionStateMachine)
[2019-02-06 10:33:06,212] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for __consumer_offsets-1. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-06 10:33:06,212] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":2,"isr":[0]} for offline partition __consumer_offsets-1 (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-06 10:33:06,213] DEBUG [PartitionStateMachine controllerId=1] After leader election, leader cache for __consumer_offsets-1 is updated to (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:4) (kafka.controller.PartitionStateMachine)
[2019-02-06 10:33:06,214] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for __consumer_offsets-16. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-06 10:33:06,214] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":2,"isr":[0]} for offline partition __consumer_offsets-16 (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-06 10:33:06,216] DEBUG [PartitionStateMachine controllerId=1] After leader election, leader cache for __consumer_offsets-16 is updated to (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:4) (kafka.controller.PartitionStateMachine)
[2019-02-06 10:33:08,441] DEBUG [Controller id=1] Sending MetadataRequest to Brokers:Vector(0, 1) for TopicAndPartitions:Set(binay-2, binay-0, binay-1) (kafka.controller.KafkaController)
[2019-02-06 10:42:00,566] DEBUG [Controller id=1] Resigning (kafka.controller.KafkaController)
[2019-02-06 10:42:00,566] DEBUG [Controller id=1] De-registering IsrChangeNotificationListener (kafka.controller.KafkaController)
[2019-02-06 10:42:00,566] DEBUG [Controller id=1] De-registering logDirEventNotificationListener (kafka.controller.KafkaController)
[2019-02-06 10:42:00,567] INFO [PartitionStateMachine controllerId=1] Stopped partition state machine (kafka.controller.PartitionStateMachine)
[2019-02-06 10:42:00,567] INFO [ReplicaStateMachine controllerId=1] Stopped replica state machine (kafka.controller.ReplicaStateMachine)
[2019-02-06 10:42:00,567] INFO [Controller-1-to-broker-1-send-thread]: Shutting down (kafka.controller.RequestSendThread)
[2019-02-06 10:42:00,567] INFO [Controller-1-to-broker-1-send-thread]: Stopped (kafka.controller.RequestSendThread)
[2019-02-06 10:42:00,567] INFO [Controller-1-to-broker-1-send-thread]: Shutdown completed (kafka.controller.RequestSendThread)
[2019-02-06 10:42:00,569] INFO [Controller-1-to-broker-0-send-thread]: Shutting down (kafka.controller.RequestSendThread)
[2019-02-06 10:42:00,569] INFO [Controller-1-to-broker-0-send-thread]: Stopped (kafka.controller.RequestSendThread)
[2019-02-06 10:42:00,569] INFO [Controller-1-to-broker-0-send-thread]: Shutdown completed (kafka.controller.RequestSendThread)
[2019-02-06 10:42:00,571] INFO [Controller id=1] Resigned (kafka.controller.KafkaController)
[2019-02-06 10:42:03,724] INFO [Controller id=1] 1 successfully elected as the controller (kafka.controller.KafkaController)
[2019-02-06 10:42:03,724] INFO [Controller id=1] Starting become controller state transition (kafka.controller.KafkaController)
[2019-02-06 10:42:03,724] INFO [Controller id=1] Initialized controller epoch to 4 and zk version 3 (kafka.controller.KafkaController)
[2019-02-06 10:42:03,725] INFO [Controller id=1] Incremented epoch to 5 (kafka.controller.KafkaController)
[2019-02-06 10:42:03,729] DEBUG [Controller id=1] Registering IsrChangeNotificationListener (kafka.controller.KafkaController)
[2019-02-06 10:42:03,907] DEBUG [Controller id=1] Registering logDirEventNotificationListener (kafka.controller.KafkaController)
[2019-02-06 10:42:03,986] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2019-02-06 10:42:03,988] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2019-02-06 10:42:03,994] INFO [Controller-1-to-broker-1-send-thread]: Starting (kafka.controller.RequestSendThread)
[2019-02-06 10:42:03,994] INFO [Controller-1-to-broker-0-send-thread]: Starting (kafka.controller.RequestSendThread)
[2019-02-06 10:42:03,995] INFO [Controller id=1] Partitions being reassigned: Map() (kafka.controller.KafkaController)
[2019-02-06 10:42:03,995] INFO [Controller id=1] Partitions already reassigned: Set() (kafka.controller.KafkaController)
[2019-02-06 10:42:03,995] INFO [Controller id=1] Resuming reassignment of partitions: Map() (kafka.controller.KafkaController)
[2019-02-06 10:42:03,996] INFO [Controller id=1] Currently active brokers in the cluster: Set(0, 1) (kafka.controller.KafkaController)
[2019-02-06 10:42:03,996] INFO [Controller id=1] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2019-02-06 10:42:03,996] INFO [Controller id=1] Current list of topics in the cluster: Set(binay, __consumer_offsets) (kafka.controller.KafkaController)
[2019-02-06 10:42:04,007] INFO [Controller id=1] List of topics to be deleted:  (kafka.controller.KafkaController)
[2019-02-06 10:42:04,007] INFO [Controller id=1] List of topics ineligible for deletion: __consumer_offsets,binay (kafka.controller.KafkaController)
[2019-02-06 10:42:04,011] INFO [Controller-1-to-broker-0-send-thread]: Controller 1 connected to localhost:9090 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2019-02-06 10:42:04,011] INFO [Controller-1-to-broker-1-send-thread]: Controller 1 connected to localhost:9091 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2019-02-06 10:42:04,012] INFO [ReplicaStateMachine controllerId=1] Invoking state change to OnlineReplica for replicas [Topic=__consumer_offsets,Partition=25,Replica=0],[Topic=__consumer_offsets,Partition=5,Replica=1],[Topic=__consumer_offsets,Partition=2,Replica=1],[Topic=__consumer_offsets,Partition=23,Replica=1],[Topic=__consumer_offsets,Partition=31,Replica=0],[Topic=__consumer_offsets,Partition=40,Replica=0],[Topic=binay,Partition=0,Replica=1],[Topic=binay,Partition=2,Replica=0],[Topic=__consumer_offsets,Partition=43,Replica=0],[Topic=binay,Partition=1,Replica=0],[Topic=__consumer_offsets,Partition=4,Replica=0],[Topic=__consumer_offsets,Partition=47,Replica=1],[Topic=__consumer_offsets,Partition=41,Replica=1],[Topic=__consumer_offsets,Partition=34,Replica=0],[Topic=__consumer_offsets,Partition=37,Replica=0],[Topic=__consumer_offsets,Partition=10,Replica=0],[Topic=__consumer_offsets,Partition=28,Replica=0],[Topic=__consumer_offsets,Partition=14,Replica=1],[Topic=__consumer_offsets,Partition=46,Replica=0],[Topic=__consumer_offsets,Partition=29,Replica=1],[Topic=__consumer_offsets,Partition=20,Replica=1],[Topic=__consumer_offsets,Partition=49,Replica=0],[Topic=__consumer_offsets,Partition=22,Replica=0],[Topic=__consumer_offsets,Partition=8,Replica=1],[Topic=__consumer_offsets,Partition=38,Replica=1],[Topic=__consumer_offsets,Partition=1,Replica=0],[Topic=binay,Partition=0,Replica=0],[Topic=binay,Partition=1,Replica=1],[Topic=__consumer_offsets,Partition=16,Replica=0],[Topic=__consumer_offsets,Partition=26,Replica=1],[Topic=binay,Partition=2,Replica=1],[Topic=__consumer_offsets,Partition=13,Replica=0],[Topic=__consumer_offsets,Partition=44,Replica=1],[Topic=__consumer_offsets,Partition=32,Replica=1],[Topic=__consumer_offsets,Partition=11,Replica=1],[Topic=__consumer_offsets,Partition=7,Replica=0],[Topic=__consumer_offsets,Partition=19,Replica=0],[Topic=__consumer_offsets,Partition=35,Replica=1],[Topic=__consumer_offsets,Partition=17,Replica=1] (kafka.controller.ReplicaStateMachine)
[2019-02-06 10:42:04,025] INFO [ReplicaStateMachine controllerId=1] Started replica state machine with initial state -> Map([Topic=__consumer_offsets,Partition=45,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=24,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=11,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=18,Replica=2] -> ReplicaDeletionIneligible, [Topic=binay,Partition=2,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=19,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=49,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=22,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=48,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=0,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=42,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=26,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=44,Replica=1] -> OnlineReplica, [Topic=binay,Partition=2,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=43,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=36,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=30,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=28,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=47,Replica=1] -> OnlineReplica, [Topic=binay,Partition=1,Replica=0] -> OnlineReplica, [Topic=binay,Partition=1,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=40,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=16,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=9,Replica=2] -> ReplicaDeletionIneligible, [Topic=binay,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=23,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=1,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=46,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=6,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=32,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=2,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=3,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=15,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=4,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=39,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=38,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=8,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=17,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=33,Replica=2] -> ReplicaDeletionIneligible, [Topic=binay,Partition=0,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=34,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=37,Replica=0] -> OnlineReplica, [Topic=binay,Partition=2,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=12,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=29,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=5,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=10,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=41,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=7,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=31,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=35,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=20,Replica=1] -> OnlineReplica, [Topic=binay,Partition=1,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=14,Replica=1] -> OnlineReplica, [Topic=binay,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=13,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=25,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=21,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=27,Replica=2] -> ReplicaDeletionIneligible) (kafka.controller.ReplicaStateMachine)
[2019-02-06 10:42:04,063] INFO [PartitionStateMachine controllerId=1] Started partition state machine with initial state -> Map(__consumer_offsets-19 -> OnlinePartition, __consumer_offsets-30 -> OfflinePartition, __consumer_offsets-47 -> OnlinePartition, __consumer_offsets-29 -> OnlinePartition, __consumer_offsets-41 -> OnlinePartition, __consumer_offsets-39 -> OfflinePartition, __consumer_offsets-17 -> OnlinePartition, __consumer_offsets-10 -> OnlinePartition, __consumer_offsets-14 -> OnlinePartition, __consumer_offsets-40 -> OnlinePartition, __consumer_offsets-18 -> OfflinePartition, __consumer_offsets-0 -> OfflinePartition, __consumer_offsets-26 -> OnlinePartition, __consumer_offsets-24 -> OfflinePartition, __consumer_offsets-33 -> OfflinePartition, __consumer_offsets-20 -> OnlinePartition, __consumer_offsets-21 -> OfflinePartition, __consumer_offsets-3 -> OfflinePartition, __consumer_offsets-22 -> OnlinePartition, __consumer_offsets-5 -> OnlinePartition, __consumer_offsets-12 -> OfflinePartition, __consumer_offsets-8 -> OnlinePartition, __consumer_offsets-23 -> OnlinePartition, __consumer_offsets-15 -> OfflinePartition, __consumer_offsets-48 -> OfflinePartition, __consumer_offsets-11 -> OnlinePartition, __consumer_offsets-13 -> OnlinePartition, __consumer_offsets-6 -> OfflinePartition, __consumer_offsets-49 -> OnlinePartition, __consumer_offsets-4 -> OnlinePartition, __consumer_offsets-28 -> OnlinePartition, __consumer_offsets-37 -> OnlinePartition, __consumer_offsets-31 -> OnlinePartition, binay-1 -> OnlinePartition, __consumer_offsets-44 -> OnlinePartition, __consumer_offsets-42 -> OfflinePartition, __consumer_offsets-34 -> OnlinePartition, __consumer_offsets-46 -> OnlinePartition, __consumer_offsets-25 -> OnlinePartition, __consumer_offsets-27 -> OfflinePartition, __consumer_offsets-45 -> OfflinePartition, __consumer_offsets-32 -> OnlinePartition, __consumer_offsets-43 -> OnlinePartition, __consumer_offsets-36 -> OfflinePartition, __consumer_offsets-35 -> OnlinePartition, __consumer_offsets-7 -> OnlinePartition, binay-2 -> OnlinePartition, __consumer_offsets-38 -> OnlinePartition, __consumer_offsets-9 -> OfflinePartition, binay-0 -> OnlinePartition, __consumer_offsets-1 -> OnlinePartition, __consumer_offsets-2 -> OnlinePartition, __consumer_offsets-16 -> OnlinePartition) (kafka.controller.PartitionStateMachine)
[2019-02-06 10:42:04,064] INFO [Controller id=1] Ready to serve as the new controller with epoch 5 (kafka.controller.KafkaController)
[2019-02-06 10:42:04,064] INFO [Controller id=1] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2019-02-06 10:42:04,064] INFO [Controller id=1] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2019-02-06 10:42:04,064] INFO [Controller id=1] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2019-02-06 10:42:04,064] INFO [Controller id=1] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2019-02-06 10:42:04,064] INFO [Controller id=1] Starting preferred replica leader election for partitions  (kafka.controller.KafkaController)
[2019-02-06 10:42:04,064] INFO [PartitionStateMachine controllerId=1] Invoking state change to OnlinePartition for partitions  (kafka.controller.PartitionStateMachine)
[2019-02-06 10:42:04,066] INFO [Controller id=1] Starting the controller scheduler (kafka.controller.KafkaController)
[2019-02-06 10:42:04,068] INFO [Controller id=1] Newly added brokers: , deleted brokers: , all live brokers: 0,1 (kafka.controller.KafkaController)
[2019-02-06 10:42:04,068] DEBUG [Controller id=1] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2019-02-06 10:42:04,069] INFO [Controller id=1] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2019-02-06 10:42:09,066] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-02-06 10:42:09,067] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-30 -> Vector(2), __consumer_offsets-39 -> Vector(2), __consumer_offsets-18 -> Vector(2), __consumer_offsets-0 -> Vector(2), __consumer_offsets-24 -> Vector(2), __consumer_offsets-33 -> Vector(2), __consumer_offsets-21 -> Vector(2), __consumer_offsets-3 -> Vector(2), __consumer_offsets-12 -> Vector(2), __consumer_offsets-15 -> Vector(2), __consumer_offsets-48 -> Vector(2), __consumer_offsets-6 -> Vector(2), __consumer_offsets-42 -> Vector(2), __consumer_offsets-27 -> Vector(2), __consumer_offsets-45 -> Vector(2), __consumer_offsets-36 -> Vector(2), binay-0 -> Vector(2, 0, 1), __consumer_offsets-9 -> Vector(2)), 1 -> Map(__consumer_offsets-47 -> Vector(1), __consumer_offsets-29 -> Vector(1), __consumer_offsets-41 -> Vector(1), __consumer_offsets-17 -> Vector(1), __consumer_offsets-14 -> Vector(1), __consumer_offsets-26 -> Vector(1), __consumer_offsets-20 -> Vector(1), __consumer_offsets-5 -> Vector(1), __consumer_offsets-8 -> Vector(1), __consumer_offsets-23 -> Vector(1), __consumer_offsets-11 -> Vector(1), __consumer_offsets-44 -> Vector(1), __consumer_offsets-32 -> Vector(1), binay-2 -> Vector(1, 2, 0), __consumer_offsets-35 -> Vector(1), __consumer_offsets-38 -> Vector(1), __consumer_offsets-2 -> Vector(1)), 0 -> Map(__consumer_offsets-19 -> Vector(0), __consumer_offsets-10 -> Vector(0), __consumer_offsets-40 -> Vector(0), __consumer_offsets-22 -> Vector(0), __consumer_offsets-13 -> Vector(0), __consumer_offsets-49 -> Vector(0), __consumer_offsets-28 -> Vector(0), __consumer_offsets-4 -> Vector(0), __consumer_offsets-37 -> Vector(0), __consumer_offsets-31 -> Vector(0), binay-1 -> Vector(0, 1, 2), __consumer_offsets-34 -> Vector(0), __consumer_offsets-46 -> Vector(0), __consumer_offsets-25 -> Vector(0), __consumer_offsets-43 -> Vector(0), __consumer_offsets-7 -> Vector(0), __consumer_offsets-1 -> Vector(0), __consumer_offsets-16 -> Vector(0))) (kafka.controller.KafkaController)
[2019-02-06 10:42:09,067] DEBUG [Controller id=1] Topics not in preferred replica Map(__consumer_offsets-30 -> Vector(2), __consumer_offsets-39 -> Vector(2), __consumer_offsets-18 -> Vector(2), __consumer_offsets-0 -> Vector(2), __consumer_offsets-24 -> Vector(2), __consumer_offsets-33 -> Vector(2), __consumer_offsets-21 -> Vector(2), __consumer_offsets-3 -> Vector(2), __consumer_offsets-12 -> Vector(2), __consumer_offsets-15 -> Vector(2), __consumer_offsets-48 -> Vector(2), __consumer_offsets-6 -> Vector(2), __consumer_offsets-42 -> Vector(2), __consumer_offsets-45 -> Vector(2), __consumer_offsets-27 -> Vector(2), __consumer_offsets-36 -> Vector(2), __consumer_offsets-9 -> Vector(2), binay-0 -> Vector(2, 0, 1)) (kafka.controller.KafkaController)
[2019-02-06 10:42:09,067] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2019-02-06 10:42:09,067] DEBUG [Controller id=1] Topics not in preferred replica Map() (kafka.controller.KafkaController)
[2019-02-06 10:42:09,067] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2019-02-06 10:42:09,067] DEBUG [Controller id=1] Topics not in preferred replica Map(binay-1 -> Vector(0, 1, 2)) (kafka.controller.KafkaController)
[2019-02-06 10:42:09,067] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.05555555555555555 (kafka.controller.KafkaController)
[2019-02-06 10:47:09,074] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-02-06 10:47:09,080] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-30 -> Vector(2), __consumer_offsets-39 -> Vector(2), __consumer_offsets-18 -> Vector(2), __consumer_offsets-0 -> Vector(2), __consumer_offsets-24 -> Vector(2), __consumer_offsets-33 -> Vector(2), __consumer_offsets-21 -> Vector(2), __consumer_offsets-3 -> Vector(2), __consumer_offsets-12 -> Vector(2), __consumer_offsets-15 -> Vector(2), __consumer_offsets-48 -> Vector(2), __consumer_offsets-6 -> Vector(2), __consumer_offsets-42 -> Vector(2), __consumer_offsets-27 -> Vector(2), __consumer_offsets-45 -> Vector(2), __consumer_offsets-36 -> Vector(2), binay-0 -> Vector(2, 0, 1), __consumer_offsets-9 -> Vector(2)), 1 -> Map(__consumer_offsets-47 -> Vector(1), __consumer_offsets-29 -> Vector(1), __consumer_offsets-41 -> Vector(1), __consumer_offsets-17 -> Vector(1), __consumer_offsets-14 -> Vector(1), __consumer_offsets-26 -> Vector(1), __consumer_offsets-20 -> Vector(1), __consumer_offsets-5 -> Vector(1), __consumer_offsets-8 -> Vector(1), __consumer_offsets-23 -> Vector(1), __consumer_offsets-11 -> Vector(1), __consumer_offsets-44 -> Vector(1), __consumer_offsets-32 -> Vector(1), binay-2 -> Vector(1, 2, 0), __consumer_offsets-35 -> Vector(1), __consumer_offsets-38 -> Vector(1), __consumer_offsets-2 -> Vector(1)), 0 -> Map(__consumer_offsets-19 -> Vector(0), __consumer_offsets-10 -> Vector(0), __consumer_offsets-40 -> Vector(0), __consumer_offsets-22 -> Vector(0), __consumer_offsets-13 -> Vector(0), __consumer_offsets-49 -> Vector(0), __consumer_offsets-28 -> Vector(0), __consumer_offsets-4 -> Vector(0), __consumer_offsets-37 -> Vector(0), __consumer_offsets-31 -> Vector(0), binay-1 -> Vector(0, 1, 2), __consumer_offsets-34 -> Vector(0), __consumer_offsets-46 -> Vector(0), __consumer_offsets-25 -> Vector(0), __consumer_offsets-43 -> Vector(0), __consumer_offsets-7 -> Vector(0), __consumer_offsets-1 -> Vector(0), __consumer_offsets-16 -> Vector(0))) (kafka.controller.KafkaController)
[2019-02-06 10:47:09,080] DEBUG [Controller id=1] Topics not in preferred replica Map(__consumer_offsets-30 -> Vector(2), __consumer_offsets-39 -> Vector(2), __consumer_offsets-18 -> Vector(2), __consumer_offsets-0 -> Vector(2), __consumer_offsets-24 -> Vector(2), __consumer_offsets-33 -> Vector(2), __consumer_offsets-21 -> Vector(2), __consumer_offsets-3 -> Vector(2), __consumer_offsets-12 -> Vector(2), __consumer_offsets-15 -> Vector(2), __consumer_offsets-48 -> Vector(2), __consumer_offsets-6 -> Vector(2), __consumer_offsets-42 -> Vector(2), __consumer_offsets-45 -> Vector(2), __consumer_offsets-27 -> Vector(2), __consumer_offsets-36 -> Vector(2), __consumer_offsets-9 -> Vector(2), binay-0 -> Vector(2, 0, 1)) (kafka.controller.KafkaController)
[2019-02-06 10:47:09,080] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2019-02-06 10:47:09,080] DEBUG [Controller id=1] Topics not in preferred replica Map() (kafka.controller.KafkaController)
[2019-02-06 10:47:09,081] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2019-02-06 10:47:09,081] DEBUG [Controller id=1] Topics not in preferred replica Map(binay-1 -> Vector(0, 1, 2)) (kafka.controller.KafkaController)
[2019-02-06 10:47:09,081] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.05555555555555555 (kafka.controller.KafkaController)
[2019-02-06 10:56:57,373] DEBUG [Controller id=1] Resigning (kafka.controller.KafkaController)
[2019-02-06 10:56:57,373] DEBUG [Controller id=1] De-registering IsrChangeNotificationListener (kafka.controller.KafkaController)
[2019-02-06 10:56:57,373] DEBUG [Controller id=1] De-registering logDirEventNotificationListener (kafka.controller.KafkaController)
[2019-02-06 10:56:57,373] INFO [PartitionStateMachine controllerId=1] Stopped partition state machine (kafka.controller.PartitionStateMachine)
[2019-02-06 10:56:57,374] INFO [ReplicaStateMachine controllerId=1] Stopped replica state machine (kafka.controller.ReplicaStateMachine)
[2019-02-06 10:56:57,374] INFO [Controller-1-to-broker-1-send-thread]: Shutting down (kafka.controller.RequestSendThread)
[2019-02-06 10:56:57,374] INFO [Controller-1-to-broker-1-send-thread]: Stopped (kafka.controller.RequestSendThread)
[2019-02-06 10:56:57,374] INFO [Controller-1-to-broker-1-send-thread]: Shutdown completed (kafka.controller.RequestSendThread)
[2019-02-06 10:56:57,375] INFO [Controller-1-to-broker-0-send-thread]: Shutting down (kafka.controller.RequestSendThread)
[2019-02-06 10:56:57,375] INFO [Controller-1-to-broker-0-send-thread]: Stopped (kafka.controller.RequestSendThread)
[2019-02-06 10:56:57,375] INFO [Controller-1-to-broker-0-send-thread]: Shutdown completed (kafka.controller.RequestSendThread)
[2019-02-06 10:56:57,377] INFO [Controller id=1] Resigned (kafka.controller.KafkaController)
[2019-02-06 10:56:57,378] INFO [Controller id=1] 1 successfully elected as the controller (kafka.controller.KafkaController)
[2019-02-06 10:56:57,378] INFO [Controller id=1] Starting become controller state transition (kafka.controller.KafkaController)
[2019-02-06 10:56:57,379] INFO [Controller id=1] Initialized controller epoch to 5 and zk version 4 (kafka.controller.KafkaController)
[2019-02-06 10:56:57,379] INFO [Controller id=1] Incremented epoch to 6 (kafka.controller.KafkaController)
[2019-02-06 10:56:57,380] DEBUG [Controller id=1] Registering IsrChangeNotificationListener (kafka.controller.KafkaController)
[2019-02-06 10:56:57,382] DEBUG [Controller id=1] Registering logDirEventNotificationListener (kafka.controller.KafkaController)
[2019-02-06 10:56:57,398] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2019-02-06 10:56:57,399] INFO [Controller-1-to-broker-1-send-thread]: Starting (kafka.controller.RequestSendThread)
[2019-02-06 10:56:57,399] INFO [Controller id=1] Partitions being reassigned: Map() (kafka.controller.KafkaController)
[2019-02-06 10:56:57,399] INFO [Controller id=1] Partitions already reassigned: Set() (kafka.controller.KafkaController)
[2019-02-06 10:56:57,399] INFO [Controller id=1] Resuming reassignment of partitions: Map() (kafka.controller.KafkaController)
[2019-02-06 10:56:57,399] INFO [Controller id=1] Currently active brokers in the cluster: Set(1) (kafka.controller.KafkaController)
[2019-02-06 10:56:57,399] INFO [Controller id=1] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2019-02-06 10:56:57,399] INFO [Controller id=1] Current list of topics in the cluster: Set(binay, __consumer_offsets) (kafka.controller.KafkaController)
[2019-02-06 10:56:57,400] INFO [Controller id=1] List of topics to be deleted:  (kafka.controller.KafkaController)
[2019-02-06 10:56:57,400] INFO [Controller id=1] List of topics ineligible for deletion: __consumer_offsets,binay (kafka.controller.KafkaController)
[2019-02-06 10:56:57,402] INFO [Controller-1-to-broker-1-send-thread]: Controller 1 connected to localhost:9091 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2019-02-06 10:56:57,402] INFO [ReplicaStateMachine controllerId=1] Invoking state change to OnlineReplica for replicas [Topic=__consumer_offsets,Partition=5,Replica=1],[Topic=__consumer_offsets,Partition=2,Replica=1],[Topic=__consumer_offsets,Partition=23,Replica=1],[Topic=binay,Partition=0,Replica=1],[Topic=__consumer_offsets,Partition=47,Replica=1],[Topic=__consumer_offsets,Partition=41,Replica=1],[Topic=__consumer_offsets,Partition=14,Replica=1],[Topic=__consumer_offsets,Partition=29,Replica=1],[Topic=__consumer_offsets,Partition=20,Replica=1],[Topic=__consumer_offsets,Partition=8,Replica=1],[Topic=__consumer_offsets,Partition=38,Replica=1],[Topic=binay,Partition=1,Replica=1],[Topic=__consumer_offsets,Partition=26,Replica=1],[Topic=binay,Partition=2,Replica=1],[Topic=__consumer_offsets,Partition=44,Replica=1],[Topic=__consumer_offsets,Partition=32,Replica=1],[Topic=__consumer_offsets,Partition=11,Replica=1],[Topic=__consumer_offsets,Partition=35,Replica=1],[Topic=__consumer_offsets,Partition=17,Replica=1] (kafka.controller.ReplicaStateMachine)
[2019-02-06 10:56:57,415] INFO [ReplicaStateMachine controllerId=1] Started replica state machine with initial state -> Map([Topic=__consumer_offsets,Partition=45,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=24,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=11,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=18,Replica=2] -> ReplicaDeletionIneligible, [Topic=binay,Partition=2,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=19,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=49,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=22,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=48,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=0,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=42,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=26,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=44,Replica=1] -> OnlineReplica, [Topic=binay,Partition=2,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=43,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=36,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=30,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=28,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=47,Replica=1] -> OnlineReplica, [Topic=binay,Partition=1,Replica=0] -> ReplicaDeletionIneligible, [Topic=binay,Partition=1,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=40,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=16,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=9,Replica=2] -> ReplicaDeletionIneligible, [Topic=binay,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=23,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=1,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=46,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=6,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=32,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=2,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=3,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=15,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=4,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=39,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=38,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=8,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=17,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=33,Replica=2] -> ReplicaDeletionIneligible, [Topic=binay,Partition=0,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=34,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=37,Replica=0] -> ReplicaDeletionIneligible, [Topic=binay,Partition=2,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=12,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=29,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=5,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=10,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=41,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=7,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=31,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=35,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=20,Replica=1] -> OnlineReplica, [Topic=binay,Partition=1,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=14,Replica=1] -> OnlineReplica, [Topic=binay,Partition=0,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=13,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=25,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=21,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=27,Replica=2] -> ReplicaDeletionIneligible) (kafka.controller.ReplicaStateMachine)
[2019-02-06 10:56:57,493] INFO [PartitionStateMachine controllerId=1] Started partition state machine with initial state -> Map(__consumer_offsets-19 -> OfflinePartition, __consumer_offsets-30 -> OfflinePartition, __consumer_offsets-47 -> OnlinePartition, __consumer_offsets-29 -> OnlinePartition, __consumer_offsets-41 -> OnlinePartition, __consumer_offsets-39 -> OfflinePartition, __consumer_offsets-17 -> OnlinePartition, __consumer_offsets-10 -> OfflinePartition, __consumer_offsets-14 -> OnlinePartition, __consumer_offsets-40 -> OfflinePartition, __consumer_offsets-18 -> OfflinePartition, __consumer_offsets-0 -> OfflinePartition, __consumer_offsets-26 -> OnlinePartition, __consumer_offsets-24 -> OfflinePartition, __consumer_offsets-33 -> OfflinePartition, __consumer_offsets-20 -> OnlinePartition, __consumer_offsets-21 -> OfflinePartition, __consumer_offsets-3 -> OfflinePartition, __consumer_offsets-22 -> OfflinePartition, __consumer_offsets-5 -> OnlinePartition, __consumer_offsets-12 -> OfflinePartition, __consumer_offsets-8 -> OnlinePartition, __consumer_offsets-23 -> OnlinePartition, __consumer_offsets-15 -> OfflinePartition, __consumer_offsets-48 -> OfflinePartition, __consumer_offsets-11 -> OnlinePartition, __consumer_offsets-13 -> OfflinePartition, __consumer_offsets-6 -> OfflinePartition, __consumer_offsets-49 -> OfflinePartition, __consumer_offsets-4 -> OfflinePartition, __consumer_offsets-28 -> OfflinePartition, __consumer_offsets-37 -> OfflinePartition, __consumer_offsets-31 -> OfflinePartition, binay-1 -> OnlinePartition, __consumer_offsets-44 -> OnlinePartition, __consumer_offsets-42 -> OfflinePartition, __consumer_offsets-34 -> OfflinePartition, __consumer_offsets-46 -> OfflinePartition, __consumer_offsets-25 -> OfflinePartition, __consumer_offsets-27 -> OfflinePartition, __consumer_offsets-45 -> OfflinePartition, __consumer_offsets-32 -> OnlinePartition, __consumer_offsets-43 -> OfflinePartition, __consumer_offsets-36 -> OfflinePartition, __consumer_offsets-35 -> OnlinePartition, __consumer_offsets-7 -> OfflinePartition, binay-2 -> OnlinePartition, __consumer_offsets-38 -> OnlinePartition, __consumer_offsets-9 -> OfflinePartition, binay-0 -> OnlinePartition, __consumer_offsets-1 -> OfflinePartition, __consumer_offsets-2 -> OnlinePartition, __consumer_offsets-16 -> OfflinePartition) (kafka.controller.PartitionStateMachine)
[2019-02-06 10:56:57,493] INFO [Controller id=1] Ready to serve as the new controller with epoch 6 (kafka.controller.KafkaController)
[2019-02-06 10:56:57,494] INFO [Controller id=1] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2019-02-06 10:56:57,494] INFO [Controller id=1] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2019-02-06 10:56:57,495] INFO [Controller id=1] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2019-02-06 10:56:57,495] INFO [Controller id=1] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2019-02-06 10:56:57,495] INFO [Controller id=1] Starting preferred replica leader election for partitions  (kafka.controller.KafkaController)
[2019-02-06 10:56:57,495] INFO [PartitionStateMachine controllerId=1] Invoking state change to OnlinePartition for partitions  (kafka.controller.PartitionStateMachine)
[2019-02-06 10:56:57,499] INFO [Controller id=1] Starting the controller scheduler (kafka.controller.KafkaController)
[2019-02-06 10:56:57,501] INFO [Controller id=1] Newly added brokers: , deleted brokers: , all live brokers: 1 (kafka.controller.KafkaController)
[2019-02-06 10:56:57,501] DEBUG [Controller id=1] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2019-02-06 10:56:57,502] INFO [Controller id=1] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2019-02-06 10:56:58,103] INFO [Controller id=1] Newly added brokers: 0, deleted brokers: , all live brokers: 0,1 (kafka.controller.KafkaController)
[2019-02-06 10:56:58,103] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2019-02-06 10:56:58,107] INFO [Controller id=1] New broker startup callback for 0 (kafka.controller.KafkaController)
[2019-02-06 10:56:58,107] INFO [Controller-1-to-broker-0-send-thread]: Starting (kafka.controller.RequestSendThread)
[2019-02-06 10:56:58,122] INFO [ReplicaStateMachine controllerId=1] Invoking state change to OnlineReplica for replicas [Topic=__consumer_offsets,Partition=25,Replica=0],[Topic=__consumer_offsets,Partition=31,Replica=0],[Topic=__consumer_offsets,Partition=40,Replica=0],[Topic=binay,Partition=2,Replica=0],[Topic=__consumer_offsets,Partition=43,Replica=0],[Topic=binay,Partition=1,Replica=0],[Topic=__consumer_offsets,Partition=4,Replica=0],[Topic=__consumer_offsets,Partition=34,Replica=0],[Topic=__consumer_offsets,Partition=37,Replica=0],[Topic=__consumer_offsets,Partition=10,Replica=0],[Topic=__consumer_offsets,Partition=28,Replica=0],[Topic=__consumer_offsets,Partition=46,Replica=0],[Topic=__consumer_offsets,Partition=49,Replica=0],[Topic=__consumer_offsets,Partition=22,Replica=0],[Topic=__consumer_offsets,Partition=1,Replica=0],[Topic=binay,Partition=0,Replica=0],[Topic=__consumer_offsets,Partition=16,Replica=0],[Topic=__consumer_offsets,Partition=13,Replica=0],[Topic=__consumer_offsets,Partition=7,Replica=0],[Topic=__consumer_offsets,Partition=19,Replica=0] (kafka.controller.ReplicaStateMachine)
[2019-02-06 10:56:58,122] INFO [Controller-1-to-broker-0-send-thread]: Controller 1 connected to localhost:9090 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2019-02-06 10:56:58,141] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for __consumer_offsets-19. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-06 10:56:58,141] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":3,"isr":[0]} for offline partition __consumer_offsets-19 (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-06 10:56:58,144] DEBUG [PartitionStateMachine controllerId=1] After leader election, leader cache for __consumer_offsets-19 is updated to (Leader:0,ISR:0,LeaderEpoch:3,ControllerEpoch:6) (kafka.controller.PartitionStateMachine)
[2019-02-06 10:56:58,158] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for __consumer_offsets-10. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-06 10:56:58,158] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":3,"isr":[0]} for offline partition __consumer_offsets-10 (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-06 10:56:58,160] DEBUG [PartitionStateMachine controllerId=1] After leader election, leader cache for __consumer_offsets-10 is updated to (Leader:0,ISR:0,LeaderEpoch:3,ControllerEpoch:6) (kafka.controller.PartitionStateMachine)
[2019-02-06 10:56:58,161] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for __consumer_offsets-40. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-06 10:56:58,161] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":3,"isr":[0]} for offline partition __consumer_offsets-40 (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-06 10:56:58,162] DEBUG [PartitionStateMachine controllerId=1] After leader election, leader cache for __consumer_offsets-40 is updated to (Leader:0,ISR:0,LeaderEpoch:3,ControllerEpoch:6) (kafka.controller.PartitionStateMachine)
[2019-02-06 10:56:58,178] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for __consumer_offsets-22. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-06 10:56:58,178] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":3,"isr":[0]} for offline partition __consumer_offsets-22 (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-06 10:56:58,180] DEBUG [PartitionStateMachine controllerId=1] After leader election, leader cache for __consumer_offsets-22 is updated to (Leader:0,ISR:0,LeaderEpoch:3,ControllerEpoch:6) (kafka.controller.PartitionStateMachine)
[2019-02-06 10:56:58,196] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for __consumer_offsets-13. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-06 10:56:58,197] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":3,"isr":[0]} for offline partition __consumer_offsets-13 (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-06 10:56:58,197] DEBUG [PartitionStateMachine controllerId=1] After leader election, leader cache for __consumer_offsets-13 is updated to (Leader:0,ISR:0,LeaderEpoch:3,ControllerEpoch:6) (kafka.controller.PartitionStateMachine)
[2019-02-06 10:56:58,207] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for __consumer_offsets-49. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-06 10:56:58,207] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":3,"isr":[0]} for offline partition __consumer_offsets-49 (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-06 10:56:58,208] DEBUG [PartitionStateMachine controllerId=1] After leader election, leader cache for __consumer_offsets-49 is updated to (Leader:0,ISR:0,LeaderEpoch:3,ControllerEpoch:6) (kafka.controller.PartitionStateMachine)
[2019-02-06 10:56:58,208] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for __consumer_offsets-4. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-06 10:56:58,209] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":3,"isr":[0]} for offline partition __consumer_offsets-4 (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-06 10:56:58,211] DEBUG [PartitionStateMachine controllerId=1] After leader election, leader cache for __consumer_offsets-4 is updated to (Leader:0,ISR:0,LeaderEpoch:3,ControllerEpoch:6) (kafka.controller.PartitionStateMachine)
[2019-02-06 10:56:58,215] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for __consumer_offsets-28. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-06 10:56:58,216] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":3,"isr":[0]} for offline partition __consumer_offsets-28 (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-06 10:56:58,218] DEBUG [PartitionStateMachine controllerId=1] After leader election, leader cache for __consumer_offsets-28 is updated to (Leader:0,ISR:0,LeaderEpoch:3,ControllerEpoch:6) (kafka.controller.PartitionStateMachine)
[2019-02-06 10:56:58,219] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for __consumer_offsets-37. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-06 10:56:58,219] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":3,"isr":[0]} for offline partition __consumer_offsets-37 (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-06 10:56:58,220] DEBUG [PartitionStateMachine controllerId=1] After leader election, leader cache for __consumer_offsets-37 is updated to (Leader:0,ISR:0,LeaderEpoch:3,ControllerEpoch:6) (kafka.controller.PartitionStateMachine)
[2019-02-06 10:56:58,223] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for __consumer_offsets-31. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-06 10:56:58,224] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":3,"isr":[0]} for offline partition __consumer_offsets-31 (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-06 10:56:58,226] DEBUG [PartitionStateMachine controllerId=1] After leader election, leader cache for __consumer_offsets-31 is updated to (Leader:0,ISR:0,LeaderEpoch:3,ControllerEpoch:6) (kafka.controller.PartitionStateMachine)
[2019-02-06 10:56:58,244] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for __consumer_offsets-34. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-06 10:56:58,244] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":3,"isr":[0]} for offline partition __consumer_offsets-34 (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-06 10:56:58,246] DEBUG [PartitionStateMachine controllerId=1] After leader election, leader cache for __consumer_offsets-34 is updated to (Leader:0,ISR:0,LeaderEpoch:3,ControllerEpoch:6) (kafka.controller.PartitionStateMachine)
[2019-02-06 10:56:58,247] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for __consumer_offsets-46. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-06 10:56:58,247] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":3,"isr":[0]} for offline partition __consumer_offsets-46 (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-06 10:56:58,248] DEBUG [PartitionStateMachine controllerId=1] After leader election, leader cache for __consumer_offsets-46 is updated to (Leader:0,ISR:0,LeaderEpoch:3,ControllerEpoch:6) (kafka.controller.PartitionStateMachine)
[2019-02-06 10:56:58,249] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for __consumer_offsets-25. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-06 10:56:58,249] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":3,"isr":[0]} for offline partition __consumer_offsets-25 (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-06 10:56:58,250] DEBUG [PartitionStateMachine controllerId=1] After leader election, leader cache for __consumer_offsets-25 is updated to (Leader:0,ISR:0,LeaderEpoch:3,ControllerEpoch:6) (kafka.controller.PartitionStateMachine)
[2019-02-06 10:56:58,259] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for __consumer_offsets-43. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-06 10:56:58,259] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":3,"isr":[0]} for offline partition __consumer_offsets-43 (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-06 10:56:58,261] DEBUG [PartitionStateMachine controllerId=1] After leader election, leader cache for __consumer_offsets-43 is updated to (Leader:0,ISR:0,LeaderEpoch:3,ControllerEpoch:6) (kafka.controller.PartitionStateMachine)
[2019-02-06 10:56:58,267] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for __consumer_offsets-7. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-06 10:56:58,267] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":3,"isr":[0]} for offline partition __consumer_offsets-7 (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-06 10:56:58,269] DEBUG [PartitionStateMachine controllerId=1] After leader election, leader cache for __consumer_offsets-7 is updated to (Leader:0,ISR:0,LeaderEpoch:3,ControllerEpoch:6) (kafka.controller.PartitionStateMachine)
[2019-02-06 10:56:58,271] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for __consumer_offsets-1. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-06 10:56:58,271] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":3,"isr":[0]} for offline partition __consumer_offsets-1 (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-06 10:56:58,272] DEBUG [PartitionStateMachine controllerId=1] After leader election, leader cache for __consumer_offsets-1 is updated to (Leader:0,ISR:0,LeaderEpoch:3,ControllerEpoch:6) (kafka.controller.PartitionStateMachine)
[2019-02-06 10:56:58,273] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for __consumer_offsets-16. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-06 10:56:58,273] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":3,"isr":[0]} for offline partition __consumer_offsets-16 (kafka.controller.OfflinePartitionLeaderSelector)
[2019-02-06 10:56:58,274] DEBUG [PartitionStateMachine controllerId=1] After leader election, leader cache for __consumer_offsets-16 is updated to (Leader:0,ISR:0,LeaderEpoch:3,ControllerEpoch:6) (kafka.controller.PartitionStateMachine)
[2019-02-06 10:57:02,500] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-02-06 10:57:02,501] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-30 -> Vector(2), __consumer_offsets-39 -> Vector(2), __consumer_offsets-18 -> Vector(2), __consumer_offsets-0 -> Vector(2), __consumer_offsets-24 -> Vector(2), __consumer_offsets-33 -> Vector(2), __consumer_offsets-21 -> Vector(2), __consumer_offsets-3 -> Vector(2), __consumer_offsets-12 -> Vector(2), __consumer_offsets-15 -> Vector(2), __consumer_offsets-48 -> Vector(2), __consumer_offsets-6 -> Vector(2), __consumer_offsets-42 -> Vector(2), __consumer_offsets-27 -> Vector(2), __consumer_offsets-45 -> Vector(2), __consumer_offsets-36 -> Vector(2), binay-0 -> Vector(2, 0, 1), __consumer_offsets-9 -> Vector(2)), 1 -> Map(__consumer_offsets-47 -> Vector(1), __consumer_offsets-29 -> Vector(1), __consumer_offsets-41 -> Vector(1), __consumer_offsets-17 -> Vector(1), __consumer_offsets-14 -> Vector(1), __consumer_offsets-26 -> Vector(1), __consumer_offsets-20 -> Vector(1), __consumer_offsets-5 -> Vector(1), __consumer_offsets-8 -> Vector(1), __consumer_offsets-23 -> Vector(1), __consumer_offsets-11 -> Vector(1), __consumer_offsets-44 -> Vector(1), __consumer_offsets-32 -> Vector(1), binay-2 -> Vector(1, 2, 0), __consumer_offsets-35 -> Vector(1), __consumer_offsets-38 -> Vector(1), __consumer_offsets-2 -> Vector(1)), 0 -> Map(__consumer_offsets-19 -> Vector(0), __consumer_offsets-10 -> Vector(0), __consumer_offsets-40 -> Vector(0), __consumer_offsets-22 -> Vector(0), __consumer_offsets-13 -> Vector(0), __consumer_offsets-49 -> Vector(0), __consumer_offsets-28 -> Vector(0), __consumer_offsets-4 -> Vector(0), __consumer_offsets-37 -> Vector(0), __consumer_offsets-31 -> Vector(0), binay-1 -> Vector(0, 1, 2), __consumer_offsets-34 -> Vector(0), __consumer_offsets-46 -> Vector(0), __consumer_offsets-25 -> Vector(0), __consumer_offsets-43 -> Vector(0), __consumer_offsets-7 -> Vector(0), __consumer_offsets-1 -> Vector(0), __consumer_offsets-16 -> Vector(0))) (kafka.controller.KafkaController)
[2019-02-06 10:57:02,503] DEBUG [Controller id=1] Topics not in preferred replica Map(__consumer_offsets-30 -> Vector(2), __consumer_offsets-39 -> Vector(2), __consumer_offsets-18 -> Vector(2), __consumer_offsets-0 -> Vector(2), __consumer_offsets-24 -> Vector(2), __consumer_offsets-33 -> Vector(2), __consumer_offsets-21 -> Vector(2), __consumer_offsets-3 -> Vector(2), __consumer_offsets-12 -> Vector(2), __consumer_offsets-15 -> Vector(2), __consumer_offsets-48 -> Vector(2), __consumer_offsets-6 -> Vector(2), __consumer_offsets-42 -> Vector(2), __consumer_offsets-45 -> Vector(2), __consumer_offsets-27 -> Vector(2), __consumer_offsets-36 -> Vector(2), __consumer_offsets-9 -> Vector(2), binay-0 -> Vector(2, 0, 1)) (kafka.controller.KafkaController)
[2019-02-06 10:57:02,504] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2019-02-06 10:57:02,504] DEBUG [Controller id=1] Topics not in preferred replica Map() (kafka.controller.KafkaController)
[2019-02-06 10:57:02,504] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2019-02-06 10:57:02,504] DEBUG [Controller id=1] Topics not in preferred replica Map(binay-1 -> Vector(0, 1, 2)) (kafka.controller.KafkaController)
[2019-02-06 10:57:02,504] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.05555555555555555 (kafka.controller.KafkaController)
